{"version":3,"file":"static/js/754.833b8064.chunk.js","mappings":"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","sources":["components/Catalogs/EmptyCatalog/EmptyCatalogItem.js","components/Preview/Preview.js","hooks/redux.ts","components/Sections/OngoingSection.js","utils/dateCalculations.ts","components/Sections/NewsSection.js","components/Sections/ContentSection.js","pages/Home.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Preview from \"../../Preview/Preview\";\r\n\r\nconst EmptyCatalogItem = ({ element }) => {\r\n  return (\r\n    <article className=\"c-column b-catalog_entry c-anime\">\r\n      <Link\r\n        element={element}\r\n        className=\"cover anime-tooltip-processed\"\r\n        to={`${element.url}`}\r\n        state={element}\r\n      >\r\n        <span className=\"image-decor\">\r\n          <span className=\"image-cutter\">\r\n            <Preview element={element} imageType={element.image.preview}/>\r\n          </span>\r\n        </span>\r\n        <span className=\"title left_aligned\">{element.name}</span>\r\n        <span className=\"misc\">\r\n          <span>{element.kind}</span>\r\n          <span>{element.aired_on ? element.aired_on.split(\"-\")[0] : \"\"}</span>\r\n        </span>\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default EmptyCatalogItem;\r\n","import { hostUrl } from \"../../const/urlConsts\";\r\n\r\nconst Preview = ({element, imageType}) => {\r\n  return (\r\n    <picture>\r\n      <source\r\n        srcSet={hostUrl + imageType}\r\n        type=\"image/webp\"\r\n      />\r\n      <img\r\n        alt={element.name}\r\n        src={hostUrl + imageType}\r\n        srcSet={hostUrl + imageType}\r\n      />\r\n    </picture>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { Link } from \"react-router-dom\";\r\nimport { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport EmptyCatalogItem from \"../Catalogs/EmptyCatalog/EmptyCatalogItem\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { updateFilter } from \"../../store/reducers/FilterSlice\";\r\n\r\nconst OngoingSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const queryParams = {\r\n    limit: 8,\r\n    status: \"ongoing\",\r\n    order: \"popularity\",\r\n    season: 2023\r\n  };\r\n  const url = UrlParts.ANIMES;\r\n  const { data, isFetching, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"subheadline linkheadline m15\">\r\n          <Link\r\n            to={`${UrlParts.ANIMES}/status/ongoing`}\r\n            onClick={() => dispatch(updateFilter([\"status\", \"ongoing\"]))}\r\n          >\r\n            Now on screens\r\n          </Link>\r\n        </div>\r\n        <div className=\"fc-ongoings\">\r\n          <div className=\"mobile-slider-prev bright\" />\r\n          <div className=\"mobile-slider-next bright\" />\r\n          <div className=\"inner\">\r\n            {isSuccess ? (\r\n              elements.map((element) => (\r\n                <EmptyCatalogItem\r\n                  key={element.id}\r\n                  element={element}\r\n                />\r\n              ))\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default OngoingSection;\r\n","export const timeFromPublication = (date: Date) => {\r\n  const time = Date.now();\r\n  const publicationDate = new Date(date);\r\n  const dateDifference = time - publicationDate.getTime();\r\n\r\n  const second = 1000;\r\n  const minute = 1000 * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const year = day * 365;\r\n\r\n  let seconds = Math.round(dateDifference / second);\r\n  let minutes = Math.round(dateDifference / minute);\r\n  let hours = Math.round(dateDifference / hour);\r\n  let days = Math.round(dateDifference / day);\r\n  let years = Math.round(dateDifference / year);\r\n\r\n  let result = \"\";\r\n\r\n  if (dateDifference < 1 * minute) {\r\n    return (result = seconds + \" seconds ago\");\r\n  }\r\n  if (dateDifference > 1 * minute && dateDifference < 1 * hour) {\r\n    return (result = minutes + \" minutes ago\");\r\n  }\r\n  if (dateDifference > 1 * hour && dateDifference < 1 * day) {\r\n    return (result = hours + \" hours ago\");\r\n  }\r\n  if (dateDifference > 1 * day && dateDifference < 1 * year) {\r\n    return (result = days + \" days ago\");\r\n  }\r\n  if (dateDifference > 1 * year) {\r\n    return (result = years + \" years ago\");\r\n  }\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { updateFilter } from \"../../store/reducers/FilterSlice\";\r\nimport { timeFromPublication } from \"../../utils/dateCalculations\";\r\n\r\nconst NewsSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const queryParams = {\r\n    forum: \"news\",\r\n    limit: 2\r\n  };\r\n  const url = UrlParts.TOPICS;\r\n  const { data, isFetching, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      console.log(data[1].html_footer);\r\n      setElements(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div class=\"subheadline-buttons\">\r\n          <Link\r\n            class=\"b-link_button dark mini create-topic\"\r\n            href=\"\"\r\n            title=\"Написать новость\"\r\n          >\r\n            <span>Add news</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"headline linkheadline orange\">News</div>\r\n        <div className=\"news_wall latest-news\">\r\n          {isSuccess ? (\r\n            elements.map((element) => (\r\n              <article\r\n                key={element.id}\r\n                className=\"b-news_wall-topic\"\r\n              >\r\n                <Link\r\n                  to={`${element.url}`}\r\n                  title={element.topic_title}\r\n                >\r\n                  <div className=\"poster\">\r\n                    <div className=\"b-shiki_swiper\">\r\n                      {}\r\n                      <img\r\n                        className=\"b-image\"\r\n                        src={new DOMParser().parseFromString(element.html_footer, \"text/html\").getElementsByTagName(\"img\")[0].src}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-line\">\r\n                    <div className=\"tags\">\r\n                      <div\r\n                        className=\"b-anime_status_tag other\"\r\n                        data-text=\"anons\"\r\n                      ></div>\r\n                      <div\r\n                        className=\"b-anime_status_tag other\"\r\n                        data-text=\"aeni\"\r\n                      ></div>\r\n                    </div>\r\n                    <time>{timeFromPublication(element.created_at)}</time>\r\n                    <div className=\"comments\">{element.comments_count}</div>\r\n                  </div>\r\n                  <div className=\"title\">{element.topic_title}</div>\r\n                </Link>\r\n              </article>\r\n            ))\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default NewsSection;\r\n","import { Suspense } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nconst ContentSection = () => {\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"fc-2_3\">\r\n          <div className=\"f-column\">\r\n            <div className=\"headline skyblue\">\r\n              Content\r\n              <div class=\"misc-links\">\r\n                <a href=\"https://shikimori.one/collections\">коллекции</a>\r\n                <a href=\"https://shikimori.one/forum/critiques\">рецензии</a>\r\n                <a href=\"https://shikimori.one/articles\">статьи</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"content-updates\"></div>\r\n          </div>\r\n          <div className=\"f-column\"></div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ContentSection;\r\n","import { useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../hooks/redux\";\r\nimport { elementVisibility, updateTitle } from \"../store/reducers/PageParams\";\r\nimport OngoingSection from \"../components/Sections/OngoingSection\";\r\nimport NewsSection from \"../components/Sections/NewsSection\";\r\nimport ContentSection from \"../components/Sections/ContentSection\";\r\n\r\nconst Home = (props) => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(updateTitle(\"Home\"));\r\n    dispatch(elementVisibility([\"search\", false]));\r\n  });\r\n  return (\r\n    <section className=\"p-dashboards p-dashboards-show x1200 l-page\">\r\n      <OngoingSection />\r\n      <NewsSection />\r\n      <ContentSection />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_ref","element","_jsx","className","children","_jsxs","Link","to","concat","url","state","Preview","imageType","image","preview","name","kind","aired_on","split","srcSet","hostUrl","type","alt","src","useAppDispatch","useDispatch","useAppSelector","useSelector","_useState","useState","_useState2","_slicedToArray","elements","setElements","dispatch","UrlParts","ANIMES","_api$useGetElementsQu","api","useGetElementsQuery","queryParams","limit","status","order","season","data","isSuccess","isFetching","useEffect","Suspense","fallback","Spinner","onClick","updateFilter","map","EmptyCatalogItem","id","timeFromPublication","date","dateDifference","Date","now","getTime","minute","hour","day","year","seconds","Math","round","minutes","hours","days","years","TOPICS","forum","console","log","html_footer","class","href","title","topic_title","DOMParser","parseFromString","getElementsByTagName","created_at","comments_count","props","updateTitle","elementVisibility","OngoingSection","NewsSection","ContentSection"],"sourceRoot":""}
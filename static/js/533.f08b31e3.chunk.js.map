{"version":3,"file":"static/js/533.f08b31e3.chunk.js","mappings":"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","sources":["components/Catalogs/EmptyCatalog/EmptyCatalogItem.js","components/UI/Bars/SimpleHorizontalBar.js","components/ElementPage/Header.js","components/ElementPage/Entry/Description.js","components/ElementPage/Entry/LineContainer.js","components/ElementPage/Entry/Information.js","components/ElementPage/Entry/Poster.js","components/ElementPage/Entry/Production.js","components/ElementPage/Score.js","components/ElementPage/Entry/Subposter.js","components/ElementPage/Entry/Entry.js","components/ElementPage/Characters/Characters.js","components/ElementPage/ImagesVideos/Images.js","components/ElementPage/ImagesVideos/Videos.js","components/ElementPage/RelatedAuthors/Authors.js","components/ElementPage/RelatedInformation.js","components/ElementPage/RelatedAuthors/Related.js","components/ElementPage/RelatedAuthors/RelatedAuthors.js","components/ElementPage/Similar.js","components/ElementPage/ElementPage.js","components/Preview/Preview.js","hooks/redux.ts","utils/dateCalculations.ts","utils/textTransform.ts"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Preview from \"../../Preview/Preview\";\r\nimport { kindTransform, urlTransform } from \"../../../utils/textTransform\";\r\n\r\nconst EmptyCatalogItem = ({ element, imageType }) => {\r\n  return (\r\n    <article className=\"c-column b-catalog_entry c-anime\">\r\n      <Link\r\n        element={element}\r\n        className=\"cover anime-tooltip-processed\"\r\n        to={urlTransform(element.kind, element.url)}\r\n        state={element}\r\n      >\r\n        <span className=\"image-decor\">\r\n          <span className=\"image-cutter\">\r\n            <Preview\r\n              element={element}\r\n              imageType={element.image[imageType]}\r\n            />\r\n          </span>\r\n        </span>\r\n        <span className={`title ${imageType === \"preview\" ? \"left_aligned\" : \"two_lined\"}`}>{element.name}</span>\r\n        {imageType === \"preview\" ? (\r\n          <span className=\"misc\">\r\n            <span>{kindTransform(element.kind)}</span>\r\n            <span>{element.aired_on ? element.aired_on.split(\"-\")[0] : \"\"}</span>\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default EmptyCatalogItem;\r\n","const SimpleHorizontalBar = ({ element, property, maxValue }) => {\r\n  return (\r\n    <div\r\n      className=\"bar simple horizontal\"\r\n      id={property}\r\n    >\r\n      {element[property].map((rate) => (\r\n        <div\r\n          key={rate.name}\r\n          className=\"line\"\r\n        >\r\n          <div className=\"x_label\">{rate.name}</div>\r\n          <div className=\"bar-container\">\r\n            <div\r\n              className={`bar ${\r\n                (rate.value / maxValue) * 100 > 75 ? \"s0\" : (rate.value / maxValue) * 100 > 50 ? \"s1\" : (rate.value / maxValue) * 100 > 25 ? \"s2\" : \"s3\"\r\n              }`}\r\n              style={{ width: `${(rate.value / maxValue) * 100}%` }}\r\n              title={rate.value}\r\n            >\r\n              <div className={`value ${(rate.value / maxValue) * 100 > 20 ? \"mini\" : \"narrow\"}`}>\r\n                {(rate.value / maxValue) * 100 > 10 ? `${rate.value}` : ``}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleHorizontalBar;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { restoreFilter, updateFilter } from \"../../store/reducers/FilterSlice\";\r\nimport { restoreCollectionFilter } from \"../../store/reducers/PageParams\";\r\nimport { kindTransform } from \"../../utils/textTransform\";\r\n\r\nconst Header = ({ element, title }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  let basicUrl = title === \"Anime\" ? UrlParts.ANIMES : title === \"Manga\" ? UrlParts.MANGAS : UrlParts.RANOBE;\r\n\r\n  const kindBreadCrumb = () => {\r\n    dispatch(restoreFilter());\r\n    dispatch(updateFilter([\"kind\", element.kind]));\r\n    dispatch(restoreCollectionFilter([\"restoreCollectionFilter\", false]));\r\n  };\r\n\r\n  // const genresBreadCrumb = () => {\r\n  //   dispatch(updateFilter([\"genres\", element.genres[0].name]));\r\n  //   dispatch(restoreCollectionFilter([\"restoreCollectionFilter\", false]));\r\n  // };\r\n\r\n  return (\r\n    <header className=\"head\">\r\n      <h1>{element.name}</h1>\r\n      <div className=\"b-breadcrumbs\">\r\n        <span>\r\n          <Link\r\n            className=\"b-link\"\r\n            to={`${basicUrl}`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </span>\r\n        <span>\r\n          <Link\r\n            className=\"b-link\"\r\n            to={`${basicUrl}`}\r\n            onClick={kindBreadCrumb}\r\n          >\r\n            {kindTransform(element.kind)}\r\n          </Link>\r\n        </span>\r\n        {/* <span>\r\n          <Link\r\n            className=\"b-link\"\r\n            to={`${basicUrl}/genres/${element.kind}`}\r\n            onClick={genresBreadCrumb}\r\n          >\r\n            {element.genres[0].name}\r\n          </Link>\r\n        </span> */}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Description = ({ descriptionValue }) => {\r\n  return (\r\n    <div className=\"c-description\">\r\n      <div className=\"subheadline m5\">Description</div>\r\n      {descriptionValue && !descriptionValue.match(\"<div class=\\\"b-text_with_paragraphs\\\"></div>\") ? (\r\n        <div\r\n          className=\"block\"\r\n          dangerouslySetInnerHTML={{ __html: descriptionValue }}\r\n        />\r\n      ) : (\r\n        <div className=\"block\">No description</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","const LineContainer = (props) => {\r\n  return (\r\n    <div className=\"line-container\">\r\n      <div className=\"line\">\r\n        <div className=\"key\">{props.title}</div>\r\n        <div className=\"value\">{props.value}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineContainer;\r\n","import { Link } from \"react-router-dom\";\r\nimport LineContainer from \"./LineContainer\";\r\nimport { Fragment } from \"react\";\r\nimport { getYearGap, transformDate } from \"../../../utils/dateCalculations\";\r\nimport { firstLetterUpperCase, kindTransform } from \"../../../utils/textTransform\";\r\nimport { UrlParts } from \"../../../const/urlConsts\";\r\nimport { restoreUpdateFilter } from \"../../../store/reducers/FilterSlice\";\r\n\r\nconst Information = ({ element, title }) => {\r\n  let basicUrl = title === \"Anime\" ? UrlParts.ANIMES : title === \"Manga\" ? UrlParts.MANGAS : UrlParts.RANOBE;\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"b-entry-info\">\r\n        <LineContainer\r\n          title={\"Type: \"}\r\n          value={kindTransform(element.kind)}\r\n        />\r\n        {title === \"Anime\" ? (\r\n          <Fragment>\r\n            <LineContainer\r\n              title={\"Episodes: \"}\r\n              value={element.ongoing ? element.episodes_aired + \" / \" + element.episodes : element.episodes}\r\n            />\r\n            {element.ongoing ? (\r\n              <LineContainer\r\n                title={\"Next episode: \"}\r\n                value={transformDate(element.next_episode_at)}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <LineContainer\r\n              title={\"Episode duration: \"}\r\n              value={`${element.duration} min`}\r\n            />\r\n          </Fragment>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {title === \"Manga\" || title === \"Ranobe\" ? (\r\n          <Fragment>\r\n            {element.status === \"released\" ? (\r\n              <Fragment>\r\n                <LineContainer\r\n                  title={\"Volumes: \"}\r\n                  value={`${element.volumes}`}\r\n                />\r\n                <LineContainer\r\n                  title={\"Chapters: \"}\r\n                  value={`${element.chapters}`}\r\n                />\r\n              </Fragment>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Fragment>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"line-container\">\r\n          <div className=\"line\">\r\n            <div className=\"key\">Status: </div>\r\n            <div className=\"value\">\r\n              <span\r\n                className={`b-anime_status_tag ${element.status}`}\r\n                data-text={firstLetterUpperCase(element.status)}\r\n              ></span>\r\n              {(element.status === \"released\") | (element.status === \"paused\") | (element.status === \"discontinued\")\r\n                ? `in ${getYearGap(element.aired_on, element.released_on)}`\r\n                : `from ${element.aired_on}`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LineContainer\r\n          title={\"Genres: \"}\r\n          value={element.genres.map((genre) => (\r\n            <Link\r\n              key={genre.id}\r\n              className=\"b-tag bubbled-processed\"\r\n              to={`${basicUrl}`}\r\n              onClick={restoreUpdateFilter(genre.kind, genre.name)}\r\n            >\r\n              <span className=\"genre-en\">{genre.name}</span>\r\n            </Link>\r\n          ))}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import Preview from \"../../Preview/Preview\";\r\n\r\nconst Poster = ({ element }) => {\r\n  return (\r\n    <div className=\"c-poster\">\r\n      <div className=\"b-db_entry-poster b-image\">\r\n        <Preview\r\n          element={element}\r\n          imageType={element.image.original}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Production = ({ productionName, title, production }) => {\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"subheadline\">{productionName}</div>\r\n      <div className=\"block\">\r\n        {production ? (\r\n          production.image ? (\r\n            <Link\r\n              to={``}\r\n              title={`${title} made by ${production.name} ${productionName}`}\r\n            >\r\n              <img\r\n                className=\"studio-logo\"\r\n                src={`https://shikimori.one/${production.image}`}\r\n                alt={`${title} made by ${production.name} ${productionName}`}\r\n              ></img>\r\n            </Link>\r\n          ) : (\r\n            <Link\r\n              className=\"b-tag\"\r\n              to={``}\r\n            >\r\n              {production.name}\r\n            </Link>\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Production;\r\n","const Score = ({ scoreValue }) => {\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"subheadline m5\">Score</div>\r\n      <div className=\"scores\">\r\n        <div className=\"b-rate\">\r\n          <div className=\"stars-container\">\r\n            <div className=\"hoverable-trigger\"></div>\r\n            <div className={`stars score score-${Math.round(scoreValue)}`}></div>\r\n            <div className=\"stars hover\"></div>\r\n            <div className=\"stars background\"></div>\r\n          </div>\r\n          <div className=\"text-score\">\r\n            <div className={`score-value score-${Math.round(scoreValue)}`}>{scoreValue}</div>\r\n            <div className=\"score-notice\">\r\n              {scoreValue > 9\r\n                ? \"Splendid\"\r\n                : scoreValue > 8\r\n                ? \"Excellent\"\r\n                : scoreValue > 7\r\n                ? \"Good\"\r\n                : scoreValue > 6\r\n                ? \"Fine\"\r\n                : scoreValue > 5\r\n                ? \"More or less\"\r\n                : scoreValue > 4\r\n                ? \"Bad\"\r\n                : scoreValue > 3\r\n                ? \"Very bad\"\r\n                : scoreValue > 2\r\n                ? \"Terrible\"\r\n                : scoreValue > 1\r\n                ? \"Worse than ever\"\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Subposter = () => {\r\n  return (\r\n    <div className=\"c-actions\">\r\n      <div className=\"b-subposter-actions\">\r\n        <Link\r\n          className=\"b-subposter-action new_comment b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n        <Link\r\n          className=\"b-subposter-action new_review b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n        <Link\r\n          className=\"b-subposter-action new_critique b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n        <Link\r\n          className=\"b-subposter-action fav-add b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n        <Link\r\n          className=\"b-subposter-action edit b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subposter;\r\n","import Description from \"./Description\";\r\nimport Information from \"./Information\";\r\nimport Poster from \"./Poster\";\r\nimport Production from \"./Production\";\r\nimport Score from \"../Score\";\r\nimport Subposter from \"./Subposter\";\r\n\r\nconst Entry = ({ element, title, productionType, prosuctionProperty }) => {\r\n  return (\r\n    <div className=\"b-db_entry\">\r\n      <div className=\"c-image\">\r\n        <div className=\"cc block\">\r\n          <Poster element={element} />\r\n          <Subposter />\r\n        </div>\r\n        <div className=\"b-user_rate\"></div>\r\n      </div>\r\n      <div className=\"c-about\">\r\n        <div className=\"cc\">\r\n          <div className=\"c-info-left\">\r\n            <div className=\"subheadline\">Information</div>\r\n            <Information\r\n              element={element}\r\n              title={title}\r\n            />\r\n          </div>\r\n          <div className=\"c-info-right\">\r\n            {element.score > 0 ? <Score scoreValue={element.score} /> : \"\"}\r\n            {(element.publishers !== undefined && element.publishers.length > 0) || (element.studios !== undefined && element.studios.length > 0) ? (\r\n              <Production\r\n                productionName={productionType}\r\n                title={title}\r\n                production={prosuctionProperty}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Description descriptionValue={element.description_html || \"No description\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Entry;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { api } from \"../../../services/Api\";\r\nimport { UrlParts } from \"../../../const/urlConsts\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport Preview from \"../../Preview/Preview\";\r\n\r\nconst Characters = () => {\r\n  const { pathname } = useLocation();\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const { data, isSuccess } = api.useGetElementQuery(pathname + UrlParts.ROLES);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      const fillteredData = data.filter((obj) => obj.roles[0] === \"Main\").map((obj) => obj.character);\r\n      setElements(fillteredData);\r\n      // console.log(elements);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"cc-characters\">\r\n        <div className=\"c-characters m0\">\r\n          <div className=\"subheadline\">\r\n            <Link to={\"\"}>Main Characters</Link>\r\n          </div>\r\n          {isSuccess ? (\r\n            elements.map((element) => (\r\n              <article\r\n                key={element.id}\r\n                className=\"c-column b-catalog_entry c-character\"\r\n              >\r\n                <Link\r\n                  className=\"cover anime-tooltip-processed\"\r\n                  to={``}\r\n                >\r\n                  <span className=\"image-decor\">\r\n                    <span className=\"image-cutter\">\r\n                      <Preview\r\n                        element={element}\r\n                        imageType={element.image.x96}\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                  <span\r\n                    className=\"title two_lined\"\r\n                    itemProp=\"name\"\r\n                  >\r\n                    <span className=\"name-en\">{element.name}</span>\r\n                  </span>\r\n                </Link>\r\n              </article>\r\n            ))\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import { Link } from \"react-router-dom\";\r\nimport Preview from \"../../Preview/Preview\";\r\n\r\nconst Images = ({ element }) => {\r\n  return (\r\n    <div className=\"c-screenshots\">\r\n      <div className=\"subheadline\">\r\n        <Link to={\"\"}>Images</Link>\r\n      </div>\r\n      <div className=\"cc\">\r\n        {element.screenshots.map((element) => (\r\n          <Link\r\n            key={element.preview}\r\n            className=\"c-screenshot b-image\"\r\n            to={``}\r\n          >\r\n            <Preview\r\n              element={element}\r\n              imageType={element.preview}\r\n            />\r\n            <span className=\"marker\"></span>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Images;\r\n","import { Link } from \"react-router-dom\";\r\nimport Preview from \"../../Preview/Preview\";\r\n\r\nconst Videos = ({ element }) => {\r\n  return (\r\n    <div className=\"c-videos\">\r\n      <div className=\"subheadline\">\r\n        <Link to={\"\"}>Videos</Link>\r\n      </div>\r\n      <div className=\"cc\">\r\n        {element.videos.map((element) => (\r\n          <div\r\n            key={element.id}\r\n            className={`c-video b-video shrinked-1_3 ${element.hosting}`}\r\n          >\r\n            <Link\r\n              className=\"video-link\"\r\n              to={element.player_url}\r\n            >\r\n              <Preview\r\n                element={element}\r\n                imageType={element.image_url}\r\n              />\r\n            </Link>\r\n            <span\r\n              className=\"name\"\r\n              title={element.name}\r\n            >\r\n              {element.name}\r\n            </span>\r\n            <span className=\"marker\">{element.name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Videos;\r\n","import { Suspense, useEffect } from \"react\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport { useLocation } from \"react-router\";\r\n// import { useAppDispatch } from \"../../../hooks/redux\";\r\nimport { api } from \"../../../services/Api\";\r\nimport { UrlParts } from \"../../../const/urlConsts\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Authors = () => {\r\n  // const dispatch = useAppDispatch();\r\n  const { pathname } = useLocation();\r\n\r\n  const { data, isSuccess } = api.useGetElementQuery(pathname + UrlParts.RELATED);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      console.log(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      {isSuccess ? (\r\n        <div className=\"c-column c-authors block_m\">\r\n          <div className=\"subheadline\"><Link to={\"\"}>Authors</Link></div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Authors;\r\n","import { Link } from \"react-router-dom\";\r\nimport { getYear } from \"../../utils/dateCalculations\";\r\nimport { kindTransform } from \"../../utils/textTransform\";\r\n\r\nconst RelatedInformation = ({ element, relation }) => {\r\n  return (\r\n    <div className=\"info\">\r\n      <div className=\"name\">\r\n        <Link\r\n          className=\"b-link bubbled-processed\"\r\n          to={element.url}\r\n        >\r\n          <span className=\"name-en\">{element.name}</span>\r\n        </Link>\r\n      </div>\r\n      <div className=\"line\">\r\n        <div className=\"value\">\r\n          <Link\r\n            className=\"b-tag\"\r\n            to={``}\r\n          >\r\n            {kindTransform(element.kind)}\r\n          </Link>\r\n          <Link\r\n            className=\"b-tag\"\r\n            to={``}\r\n          >\r\n            {getYear(element.aired_on)}\r\n          </Link>\r\n          <Link\r\n            className=\"b-anime_status_tag other\"\r\n            to={``}\r\n          >\r\n            {relation}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelatedInformation;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport Preview from \"../../Preview/Preview\";\r\nimport RelatedInformation from \"../RelatedInformation\";\r\nimport { UrlParts } from \"../../../const/urlConsts\";\r\nimport { api } from \"../../../services/Api\";\r\n\r\nconst Related = () => {\r\n  const { pathname } = useLocation();\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const { data, isSuccess } = api.useGetElementQuery(pathname + UrlParts.RELATED);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data);\r\n      // console.log(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      {isSuccess && elements.length > 0 ? (\r\n        <div className=\"c-column block_m\">\r\n          <div className=\"b-options-floated mobile-phone\">\r\n            <Link to={``}>Directly</Link>\r\n            <Link to={``}>Chronology</Link>\r\n            <Link to={``}>Franchise</Link>\r\n          </div>\r\n          <div className=\"subheadline\">Related</div>\r\n\r\n          <div className=\"cc\">\r\n            {elements.map((element) => (\r\n              <div\r\n                key={element.anime === null ? element.manga.id : element.anime.id}\r\n                className=\"b-db_entry-variant-list_item\"\r\n              >\r\n                <Link\r\n                  className=\"image bubbled-processed\"\r\n                  to={``}\r\n                >\r\n                  <Preview\r\n                    element={element}\r\n                    imageType={element[`${element.anime === null ? \"manga\" : \"anime\"}`].image.x48}\r\n                  />\r\n                </Link>\r\n                <RelatedInformation\r\n                  element={element[`${element.anime === null ? \"manga\" : \"anime\"}`]}\r\n                  relation={element.relation}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Related;\r\n","import Authors from \"./Authors\";\r\nimport Related from \"./Related\";\r\n\r\nconst RelatedAuthors = () => {\r\n  return (\r\n    <div className=\"cc-related-authors\">\r\n      <Related />\r\n      <Authors />\r\n    </div>\r\n  );\r\n};\r\nexport default RelatedAuthors;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport EmptyCatalogItem from \"../Catalogs/EmptyCatalog/EmptyCatalogItem\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nconst Similar = () => {\r\n  const { pathname } = useLocation();\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const { data, isSuccess } = api.useGetElementQuery(pathname + UrlParts.SIMILAR);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data.slice(0, 7));\r\n      console.log(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      {isSuccess && elements.length > 1 ? (\r\n        <div className=\"block\">\r\n          <div className=\"subheadline\">\r\n            <Link to={\"\"}>Similar</Link>\r\n          </div>\r\n          <div className=\"cc cc-similar\">\r\n            {isSuccess ? (\r\n              elements.map((element) => (\r\n                <EmptyCatalogItem\r\n                  key={element.id}\r\n                  element={element}\r\n                  imageType=\"x96\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Similar;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { useLocation } from \"react-router\";\r\nimport { api } from \"../../services/Api\";\r\nimport \"./../../styles/pages/p-animes.scss\";\r\nimport SimpleHorizontalBar from \"../UI/Bars/SimpleHorizontalBar\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { updateTitle } from \"../../store/reducers/PageParams\";\r\nimport Header from \"./Header\";\r\nimport Entry from \"./Entry/Entry\";\r\nimport Characters from \"./Characters/Characters\";\r\nimport Images from \"./ImagesVideos/Images\";\r\nimport Videos from \"./ImagesVideos/Videos\";\r\nimport RelatedAuthors from \"./RelatedAuthors/RelatedAuthors\";\r\nimport Similar from \"./Similar\";\r\n\r\nconst ElementPage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { pathname } = useLocation();\r\n\r\n  const [maxRatesScore, setMaxRatesScore] = useState(0);\r\n  const [maxRatesStatuse, setMaxRatesStatuse] = useState(0);\r\n  const [productionType, setProductionType] = useState(\"\");\r\n  const [prosuctionProperty, setProsuctionProperty] = useState(\"\");\r\n\r\n  const { data, isSuccess } = api.useGetElementQuery(pathname);\r\n  let title;\r\n  RegExp(`${UrlParts.ANIMES}`).test(pathname) ? (title = \"Anime\") : RegExp(`${UrlParts.MANGAS}`).test(pathname) ? (title = \"Manga\") : (title = \"Ranobe\");\r\n  const element = data;\r\n\r\n  useEffect(() => {\r\n    dispatch(updateTitle(title));\r\n    if (isSuccess) {\r\n      if (element.publishers !== undefined && element.publishers.length > 0) {\r\n        setProductionType(\"Publisher\");\r\n        setProsuctionProperty(element.publishers[0]);\r\n      }\r\n      if (element.studios !== undefined && element.studios.length > 0) {\r\n        setProductionType(\"Studio\");\r\n        setProsuctionProperty(element.studios[0]);\r\n      }\r\n      const maxRatesScoreCalc = Math.max(\r\n        ...element.rates_scores_stats.map((rate) => {\r\n          return rate.value;\r\n        })\r\n      );\r\n      const maxRatesStatuseCalc = Math.max(\r\n        ...element.rates_statuses_stats.map((rate) => {\r\n          return rate.value;\r\n        })\r\n      );\r\n      setMaxRatesScore(maxRatesScoreCalc);\r\n      setMaxRatesStatuse(maxRatesStatuseCalc);\r\n      console.log(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      {isSuccess ? (\r\n        <section className=\"p-animes p-animes-show p-db_entries p-db_entries-show p-elements_collection-index x1200 l-page\">\r\n          <div>\r\n            <Header\r\n              element={element}\r\n              title={title}\r\n            />\r\n            <div className=\"menu-slide-outer x199\">\r\n              <div className=\"menu-slide-inner\">\r\n                <div className=\"l-content\">\r\n                  <div className=\"block\">\r\n                    <Entry\r\n                      element={element}\r\n                      title={title}\r\n                      productionType={productionType}\r\n                      prosuctionProperty={prosuctionProperty}\r\n                    />\r\n                    <RelatedAuthors />\r\n                    <Characters />\r\n                    {title === \"Anime\" ? (\r\n                      <div className=\"cc m0 two-videos\">\r\n                        <Images element={element} />\r\n                        <Videos element={element} />\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <Similar />\r\n                  </div>\r\n                </div>\r\n                <aside className=\"l-menu\">\r\n                  <div className=\"b-animes-menu\">\r\n                    <div className=\"block\">\r\n                      <div className=\"subheadline\">People's ratings</div>\r\n                      <SimpleHorizontalBar\r\n                        element={element}\r\n                        property={\"rates_scores_stats\"}\r\n                        maxValue={maxRatesScore}\r\n                      />\r\n                    </div>\r\n                    <div className=\"block\">\r\n                      <div className=\"subheadline\">On people's lists</div>\r\n                      <SimpleHorizontalBar\r\n                        element={element}\r\n                        property={\"rates_statuses_stats\"}\r\n                        maxValue={maxRatesStatuse}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </aside>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ElementPage;\r\n","import { hostUrl } from \"../../const/urlConsts\";\r\n\r\nconst Preview = ({ element, imageType }) => {\r\n  // console.log(imageType);\r\n  let url = \"\";\r\n  imageType.includes(\"http\") ? (url = imageType) : (url = hostUrl + imageType);\r\n\r\n  return (\r\n    <picture>\r\n      <source\r\n        srcSet={url}\r\n        type=\"image/webp\"\r\n      />\r\n      <img\r\n        alt={element.name}\r\n        src={url}\r\n        srcSet={url}\r\n      />\r\n    </picture>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","export const timeFromPublication = (date: Date) => {\r\n  const time = Date.now();\r\n  const publicationDate = new Date(date);\r\n  const dateDifference = time - publicationDate.getTime();\r\n\r\n  const second = 1000;\r\n  const minute = 1000 * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const year = day * 365;\r\n\r\n  let seconds = Math.round(dateDifference / second);\r\n  let minutes = Math.round(dateDifference / minute);\r\n  let hours = Math.round(dateDifference / hour);\r\n  let days = Math.round(dateDifference / day);\r\n  let years = Math.round(dateDifference / year);\r\n\r\n  if (dateDifference < 1 * minute) {\r\n    return seconds + \" seconds ago\";\r\n  }\r\n  if (dateDifference > 1 * minute && dateDifference < 1 * hour) {\r\n    return minutes + \" minutes ago\";\r\n  }\r\n  if (dateDifference > 1 * hour && dateDifference < 1 * day) {\r\n    return hours + \" hours ago\";\r\n  }\r\n  if (dateDifference > 1 * day && dateDifference < 1 * year) {\r\n    return days + \" days ago\";\r\n  }\r\n  if (dateDifference > 1 * year) {\r\n    return years + \" years ago\";\r\n  }\r\n};\r\n\r\nexport const getYear = (date: Date) => {\r\n  return new Date(date).getFullYear();\r\n};\r\n\r\nexport const getYearGap = (airDate: string, releaseDate: string) => {\r\n  return releaseDate ? (`${airDate.substring(0, 4)} - ${releaseDate.substring(0, 4)}`) : (`${airDate.substring(0, 4)}`);\r\n};\r\n\r\nexport const transformDate = (inputDate: Date) => {\r\n  let date = new Date(inputDate);\r\n  let year = date.getFullYear();\r\n  let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n  let day = (\"0\" + date.getDate()).slice(-2);\r\n  let hours = (\"0\" + date.getHours()).slice(-2);\r\n  let minutes = (\"0\" + date.getMinutes()).slice(-2);\r\n  return `${year}-${month}-${day} - ${hours}:${minutes}`;\r\n};\r\n","export const kindTransform = (kind: string) => {\r\n  let outputKind: string = \"\";\r\n  switch (kind) {\r\n    case \"tv\":\r\n      outputKind = \"TV series\";\r\n      break;\r\n    default:\r\n      outputKind = kind.replace(/_/g, \" \").replace(kind[0], kind[0].toUpperCase());\r\n  }\r\n  return outputKind;\r\n};\r\n\r\nexport const urlTransform = (kind: string, url: string) => {\r\n  let transformedUrl: string = \"\";\r\n  kind === \"light_novel\" || kind === \"novel\" ? (transformedUrl = url.replace(/mangas/g, \"ranobe\")) : (transformedUrl = url);\r\n  return transformedUrl;\r\n};\r\n\r\nexport const firstLetterUpperCase = (InputStr: string) => {\r\n  return InputStr.replace(InputStr[0], InputStr[0].toUpperCase());\r\n};\r\n"],"names":["_ref","element","imageType","_jsx","className","children","_jsxs","Link","to","urlTransform","kind","url","state","Preview","image","concat","name","kindTransform","aired_on","split","property","maxValue","id","map","rate","value","style","width","title","dispatch","useAppDispatch","basicUrl","UrlParts","ANIMES","MANGAS","RANOBE","onClick","kindBreadCrumb","restoreFilter","updateFilter","restoreCollectionFilter","descriptionValue","match","dangerouslySetInnerHTML","__html","props","LineContainer","Fragment","ongoing","episodes_aired","episodes","transformDate","next_episode_at","duration","status","volumes","chapters","firstLetterUpperCase","getYearGap","released_on","genres","genre","restoreUpdateFilter","original","productionName","production","src","alt","scoreValue","Math","round","Subposter","productionType","prosuctionProperty","Poster","Information","score","Score","undefined","publishers","length","studios","Production","Description","description_html","Characters","pathname","useLocation","elements","setElements","useState","data","isSuccess","api","useGetElementQuery","ROLES","useEffect","fillteredData","filter","obj","roles","character","Suspense","fallback","Spinner","x96","itemProp","screenshots","preview","videos","hosting","player_url","image_url","Authors","RELATED","console","log","relation","getYear","Related","anime","x48","RelatedInformation","manga","RelatedAuthors","Similar","SIMILAR","slice","EmptyCatalogItem","ElementPage","maxRatesScore","setMaxRatesScore","maxRatesStatuse","setMaxRatesStatuse","setProductionType","setProsuctionProperty","RegExp","test","updateTitle","maxRatesScoreCalc","max","rates_scores_stats","maxRatesStatuseCalc","rates_statuses_stats","Header","Entry","Images","Videos","SimpleHorizontalBar","includes","hostUrl","srcSet","type","useDispatch","useAppSelector","useSelector","timeFromPublication","date","dateDifference","Date","now","getTime","minute","hour","day","year","seconds","minutes","hours","days","years","getFullYear","airDate","releaseDate","substring","inputDate","month","getMonth","getDate","getHours","getMinutes","outputKind","replace","toUpperCase","transformedUrl","InputStr"],"sourceRoot":""}
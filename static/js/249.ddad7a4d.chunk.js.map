{"version":3,"file":"static/js/249.ddad7a4d.chunk.js","mappings":"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","sources":["components/Catalogs/EmptyCatalog/EmptyCatalogItem.js","components/Preview/Preview.js","hooks/redux.ts","components/Sections/OngoingSection.js","pages/Home.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Preview from \"../../Preview/Preview\";\r\nimport { RouteNames } from \"../../../const/routeNames\";\r\n\r\nconst EmptyCatalogItem = ({ element }) => {\r\n  // console.log(element.url);\r\n  // console.log(hostUrl + UrlParts.API + element.url);\r\n  return (\r\n    <article className=\"c-column b-catalog_entry c-anime\">\r\n      <Link\r\n        element={element}\r\n        className=\"cover anime-tooltip-processed\"\r\n        to={`${element.url}`}\r\n        state={element}\r\n      >\r\n        <span className=\"image-decor\">\r\n          <span className=\"image-cutter\">\r\n            <Preview element={element} imageType={element.image.preview}/>\r\n          </span>\r\n        </span>\r\n        <span className=\"title left_aligned\">{element.name}</span>\r\n        <span className=\"misc\">\r\n          <span>{element.kind}</span>\r\n          <span>{element.aired_on ? element.aired_on.split(\"-\")[0] : \"\"}</span>\r\n        </span>\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default EmptyCatalogItem;\r\n","import { hostUrl } from \"../../const/urlConsts\";\r\n\r\nconst Preview = ({element, imageType}) => {\r\n  return (\r\n    <picture>\r\n      <source\r\n        srcSet={hostUrl + imageType}\r\n        type=\"image/webp\"\r\n      />\r\n      <img\r\n        alt={element.name}\r\n        src={hostUrl + imageType}\r\n        srcSet={hostUrl + imageType}\r\n      />\r\n    </picture>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { Link } from \"react-router-dom\";\r\nimport { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport EmptyCatalogItem from \"../Catalogs/EmptyCatalog/EmptyCatalogItem\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { updateFilter } from \"../../store/reducers/FilterSlice\";\r\n\r\nconst OngoingSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const queryParams = {\r\n    limit: 8,\r\n    status: \"ongoing\",\r\n    order: \"popularity\",\r\n    season: 2023\r\n  };\r\n  const url = UrlParts.ANIMES;\r\n  const { data, isFetching, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"subheadline linkheadline\">\r\n          <Link\r\n            to={`${UrlParts.ANIMES}/status/ongoing`}\r\n            onClick={() => dispatch(updateFilter([\"status\", \"ongoing\"]))}\r\n          >\r\n            Now on screens\r\n          </Link>\r\n        </div>\r\n        <div className=\"fc-ongoings\">\r\n          <div className=\"mobile-slider-prev bright\" />\r\n          <div className=\"mobile-slider-next bright\" />\r\n          <div className=\"inner\">\r\n            {isSuccess ? (\r\n              elements.map((element) => (\r\n                <EmptyCatalogItem\r\n                  key={element.id}\r\n                  element={element}\r\n                />\r\n              ))\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default OngoingSection;\r\n","import { useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../hooks/redux\";\r\nimport { elementVisibility, updateTitle } from \"../store/reducers/PageParams\";\r\nimport OngoingSection from \"../components/Sections/OngoingSection\";\r\n\r\nconst Home = (props) => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(updateTitle(\"Home\"));\r\n    dispatch(elementVisibility([\"search\", false]));\r\n  });\r\n  return (\r\n    <section className=\"p-dashboards p-dashboards-show x1200 l-page\">\r\n      <OngoingSection />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_ref","element","_jsx","className","children","_jsxs","Link","to","concat","url","state","Preview","imageType","image","preview","name","kind","aired_on","split","srcSet","hostUrl","type","alt","src","useAppDispatch","useDispatch","useAppSelector","useSelector","_useState","useState","_useState2","_slicedToArray","elements","setElements","dispatch","UrlParts","ANIMES","_api$useGetElementsQu","api","useGetElementsQuery","queryParams","limit","status","order","season","data","isSuccess","isFetching","useEffect","Suspense","fallback","Spinner","onClick","updateFilter","map","EmptyCatalogItem","id","props","updateTitle","elementVisibility","OngoingSection"],"sourceRoot":""}
{"version":3,"file":"static/js/722.6e63178d.chunk.js","mappings":"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","sources":["components/UI/Bars/SimpleHorizontalBar.js","components/ElementPage/Score.js","components/ElementPage/Production.js","components/ElementPage/Description.js","components/ElementPage/Information.js","components/ElementPage/Poster.js","components/ElementPage/Subposter.js","components/ElementPage/RelatedInformation.js","components/ElementPage/Related.js","components/ElementPage/Authors.js","components/ElementPage/Header.js","components/ElementPage/ElementPage.js","components/Preview/Preview.js","hooks/redux.ts","utils/dateCalculations.ts"],"sourcesContent":["const SimpleHorizontalBar = ({ element, property, maxValue }) => {\r\n  return (\r\n    <div\r\n      className=\"bar simple horizontal\"\r\n      id={property}\r\n    >\r\n      {element[property].map((rate) => (\r\n        <div\r\n          key={rate.name}\r\n          className=\"line\"\r\n        >\r\n          <div className=\"x_label\">{rate.name}</div>\r\n          <div className=\"bar-container\">\r\n            <div\r\n              className={`bar ${\r\n                (rate.value / maxValue) * 100 > 75 ? \"s0\" : (rate.value / maxValue) * 100 > 50 ? \"s1\" : (rate.value / maxValue) * 100 > 25 ? \"s2\" : \"s3\"\r\n              }`}\r\n              style={{ width: `${(rate.value / maxValue) * 100}%` }}\r\n              title={rate.value}\r\n            >\r\n              <div className={`value ${(rate.value / maxValue) * 100 > 20 ? \"mini\" : \"narrow\"}`}>\r\n                {(rate.value / maxValue) * 100 > 10 ? `${rate.value}` : ``}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleHorizontalBar;\r\n","const Score = ({ scoreValue }) => {\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"subheadline m5\">Score</div>\r\n      <div className=\"scores\">\r\n        <div className=\"b-rate\">\r\n          <div className=\"stars-container\">\r\n            <div className=\"hoverable-trigger\"></div>\r\n            <div className={`stars score score-${Math.round(scoreValue)}`}></div>\r\n            <div className=\"stars hover\"></div>\r\n            <div className=\"stars background\"></div>\r\n          </div>\r\n          <div className=\"text-score\">\r\n            <div className={`score-value score-${Math.round(scoreValue)}`}>{scoreValue}</div>\r\n            <div className=\"score-notice\">\r\n              {scoreValue > 9\r\n                ? \"Splendid\"\r\n                : scoreValue > 8\r\n                ? \"Excellent\"\r\n                : scoreValue > 7\r\n                ? \"Good\"\r\n                : scoreValue > 6\r\n                ? \"Fine\"\r\n                : scoreValue > 5\r\n                ? \"More or less\"\r\n                : scoreValue > 4\r\n                ? \"Bad\"\r\n                : scoreValue > 3\r\n                ? \"Very bad\"\r\n                : scoreValue > 2\r\n                ? \"Terrible\"\r\n                : scoreValue > 1\r\n                ? \"Worse than ever\"\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Production = ({ productionName, title, production }) => {\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"subheadline\">{productionName}</div>\r\n      <div className=\"block\">\r\n        {production ? (\r\n          production.image ? (\r\n            <Link\r\n              to={``}\r\n              title={`${title} made by ${production.name} ${productionName}`}\r\n            >\r\n              <img\r\n                className=\"studio-logo\"\r\n                src={`https://shikimori.one/${production.image}`}\r\n                alt={`${title} made by ${production.name} ${productionName}`}\r\n              ></img>\r\n            </Link>\r\n          ) : (\r\n            <Link\r\n              className=\"b-tag\"\r\n              to={``}\r\n            >\r\n              {production.name}\r\n            </Link>\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Production;\r\n","const Description = ({ descriptionValue }) => {\r\n  return (\r\n    <div className=\"c-description\">\r\n      <div className=\"subheadline m5\">Description</div>\r\n      {descriptionValue ? (\r\n        <div\r\n          className=\"block\"\r\n          dangerouslySetInnerHTML={{ __html: descriptionValue }}\r\n        />\r\n      ) : (\r\n        <div className=\"block\">No description</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Information = ({ element, title }) => {\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"b-entry-info\">\r\n        <div className=\"line-container\">\r\n          <div className=\"line\">\r\n            <div className=\"key\">Type: </div>\r\n            <div className=\"value\">{element.kind}</div>\r\n          </div>\r\n        </div>\r\n        {title === \"Anime\" ? (\r\n          <div className=\"line-container\">\r\n            <div className=\"line\">\r\n              <div className=\"key\">Episodes: </div>\r\n              <div className=\"value\">{element.ongoing ? element.episodes_aired + \"/\" + element.episodes : element.episodes}</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {title === \"Anime\" ? (\r\n          <div className=\"line-container\">\r\n            <div className=\"line\">\r\n              <div className=\"key\">Episode duration: </div>\r\n              <div className=\"value\">{element.duration} min</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {title === \"Manga\" || title === \"Ranobe\" ? (\r\n          <div className=\"line-container\">\r\n            <div className=\"line\">\r\n              <div className=\"key\">Volumes: </div>\r\n              <div className=\"value\">{element.volumes}</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {title === \"Manga\" || title === \"Ranobe\" ? (\r\n          <div className=\"line-container\">\r\n            <div className=\"line\">\r\n              <div className=\"key\">Chapters: </div>\r\n              <div className=\"value\">{element.chapters}</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"line-container\">\r\n          <div className=\"line\">\r\n            <div className=\"key\">Status: </div>\r\n            <div className=\"value\">\r\n              <span\r\n                className={`b-anime_status_tag ${element.status}`}\r\n                data-text={element.status}\r\n              ></span>\r\n              {element.aired_on}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"line-container\">\r\n          <div className=\"line\">\r\n            <div className=\"key\">Genres: </div>\r\n            <span\r\n              className=\"b-anime_status_tag\"\r\n              data-text=\"вышло\"\r\n            ></span>\r\n            <div className=\"value\">\r\n              {element.genres.map((genre) => (\r\n                <Link\r\n                  key={genre.id}\r\n                  className=\"b-tag bubbled-processed\"\r\n                  to={\"\"}\r\n                >\r\n                  <span className=\"genre-en\">{genre.name}</span>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import Preview from \"../Preview/Preview\";\r\n\r\nconst Poster = ({ element }) => {\r\n  return (\r\n    <div className=\"c-poster\">\r\n      <div className=\"b-db_entry-poster b-image\">\r\n        <Preview\r\n          element={element}\r\n          imageType={element.image.original}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Subposter = () => {\r\n  return (\r\n    <div className=\"c-actions\">\r\n      <div className=\"b-subposter-actions\">\r\n        <Link\r\n          className=\"b-subposter-action new_comment b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n        <Link\r\n          className=\"b-subposter-action new_review b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n        <Link\r\n          className=\"b-subposter-action new_critique b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n        <Link\r\n          className=\"b-subposter-action fav-add b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n        <Link\r\n          className=\"b-subposter-action edit b-tooltipped\"\r\n          to={\"\"}\r\n        ></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subposter;\r\n","import { Link } from \"react-router-dom\";\r\nimport { getYear } from \"../../utils/dateCalculations\";\r\n\r\nconst RelatedInformation = ({ element, relation }) => {\r\n  return (\r\n    <div className=\"info\">\r\n      <div className=\"name\">\r\n        <Link\r\n          className=\"b-link bubbled-processed\"\r\n          to={element.url}\r\n        >\r\n          <span className=\"name-en\">{element.name}</span>\r\n        </Link>\r\n      </div>\r\n      <div className=\"line\">\r\n        <div className=\"value\">\r\n          <Link\r\n            className=\"b-tag\"\r\n            to={``}\r\n          >\r\n            {element.kind}\r\n          </Link>\r\n          <Link\r\n            className=\"b-tag\"\r\n            to={``}\r\n          >\r\n            {getYear(element.aired_on)}\r\n          </Link>\r\n          <Link\r\n            className=\"b-anime_status_tag other\"\r\n            to={``}\r\n          >\r\n            {relation}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelatedInformation;\r\n","import { useLocation } from \"react-router\";\r\nimport { api } from \"../../services/Api\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Preview from \"../Preview/Preview\";\r\nimport RelatedInformation from \"./RelatedInformation\";\r\n\r\nconst Related = () => {\r\n  const { pathname } = useLocation();\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const { data, isSuccess } = api.useGetElementQuery(pathname + \"/related\");\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data);\r\n      console.log(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"c-column block_m\">\r\n        <div className=\"b-options-floated mobile-phone\">\r\n          <Link to={``}>Directly</Link>\r\n          <Link to={``}>Chronology</Link>\r\n          <Link to={``}>Franchise</Link>\r\n        </div>\r\n        <div className=\"subheadline\">Related</div>\r\n\r\n        <div className=\"cc\">\r\n          {isSuccess ? (\r\n            elements.map((element) => (\r\n              <div\r\n                key={element.anime === null ? element.manga.id : element.anime.id}\r\n                className=\"b-db_entry-variant-list_item\"\r\n              >\r\n                <Link\r\n                  className=\"image bubbled-processed\"\r\n                  to={``}\r\n                >\r\n                  <Preview\r\n                    element={element}\r\n                    imageType={element[`${element.anime === null ? \"manga\" : \"anime\"}`].image.x48}\r\n                  />\r\n                </Link>\r\n                <RelatedInformation\r\n                  element={element[`${element.anime === null ? \"manga\" : \"anime\"}`]}\r\n                  relation={element.relation}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Related;\r\n","import { Suspense, useEffect } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { api } from \"../../services/Api\";\r\n\r\nconst Authors = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { pathname } = useLocation();\r\n\r\n  const { data, isSuccess } = api.useGetElementQuery(pathname + \"/related\");\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      // console.log(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      {isSuccess ? (\r\n        <div className=\"c-column c-authors block_m\">\r\n          <div className=\"subheadline\">Authors</div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Authors;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { updateFilter } from \"../../store/reducers/FilterSlice\";\r\nimport { restoreCollectionFilter } from \"../../store/reducers/PageParams\";\r\n\r\nconst Header = ({ element, title }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  let basicUrl = title === \"Anime\" ? UrlParts.ANIMES : title === \"Manga\" ? UrlParts.MANGAS : UrlParts.RANOBE;\r\n\r\n  const kindBreadCrumb = () => {\r\n    dispatch(updateFilter([\"kind\", element.kind]));\r\n    dispatch(restoreCollectionFilter([\"restoreCollectionFilter\", false]));\r\n  };\r\n\r\n  // const genresBreadCrumb = () => {\r\n  //   dispatch(updateFilter([\"genres\", element.genres[0].name]));\r\n  //   dispatch(restoreCollectionFilter([\"restoreCollectionFilter\", false]));\r\n  // };\r\n\r\n  return (\r\n    <header className=\"head\">\r\n      <h1>{element.name}</h1>\r\n      <div className=\"b-breadcrumbs\">\r\n        <span>\r\n          <Link\r\n            className=\"b-link\"\r\n            to={`${basicUrl}`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </span>\r\n        <span>\r\n          <Link\r\n            className=\"b-link\"\r\n            to={`${basicUrl}/kind/${element.kind}`}\r\n            onClick={kindBreadCrumb}\r\n          >\r\n            {element.kind}\r\n          </Link>\r\n        </span>\r\n        {/* <span>\r\n          <Link\r\n            className=\"b-link\"\r\n            to={`${basicUrl}/genres/${element.kind}`}\r\n            onClick={genresBreadCrumb}\r\n          >\r\n            {element.genres[0].name}\r\n          </Link>\r\n        </span> */}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { useLocation } from \"react-router\";\r\nimport { api } from \"../../services/Api\";\r\nimport \"./../../styles/pages/p-animes.scss\";\r\nimport SimpleHorizontalBar from \"../UI/Bars/SimpleHorizontalBar\";\r\nimport Score from \"./Score\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { updateTitle } from \"../../store/reducers/PageParams\";\r\nimport Production from \"./Production\";\r\nimport Description from \"./Description\";\r\nimport Information from \"./Information\";\r\nimport Poster from \"./Poster\";\r\nimport Subposter from \"./Subposter\";\r\nimport Related from \"./Related\";\r\nimport Authors from \"./Authors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nconst ElementPage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { pathname } = useLocation();\r\n\r\n  const [maxRatesScore, setMaxRatesScore] = useState(0);\r\n  const [maxRatesStatuse, setMaxRatesStatuse] = useState(0);\r\n  const [productionType, setProductionType] = useState(\"\");\r\n  const [prosuctionProperty, setProsuctionProperty] = useState(\"\");\r\n\r\n  const { data, isSuccess } = api.useGetElementQuery(pathname);\r\n  let title;\r\n  RegExp(`${UrlParts.ANIMES}`).test(pathname) ? (title = \"Anime\") : RegExp(`${UrlParts.MANGAS}`).test(pathname) ? (title = \"Manga\") : (title = \"Ranobe\");\r\n  const element = data;\r\n\r\n  useEffect(() => {\r\n    dispatch(updateTitle(title));\r\n    if (isSuccess) {\r\n      if (element.publishers !== undefined && element.publishers.length > 0) {\r\n        setProductionType(\"Publisher\");\r\n        setProsuctionProperty(element.publishers[0]);\r\n      }\r\n      if (element.studios !== undefined && element.studios.length > 0) {\r\n        setProductionType(\"Studio\");\r\n        setProsuctionProperty(element.studios[0]);\r\n      }\r\n      const maxRatesScoreCalc = Math.max(\r\n        ...element.rates_scores_stats.map((rate) => {\r\n          return rate.value;\r\n        })\r\n      );\r\n      const maxRatesStatuseCalc = Math.max(\r\n        ...element.rates_statuses_stats.map((rate) => {\r\n          return rate.value;\r\n        })\r\n      );\r\n      setMaxRatesScore(maxRatesScoreCalc);\r\n      setMaxRatesStatuse(maxRatesStatuseCalc);\r\n    }\r\n  }, [data]);\r\n  console.log(data);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      {isSuccess ? (\r\n        <section className=\"p-animes p-animes-show p-db_entries p-db_entries-show p-elements_collection-index x1200 l-page\">\r\n          <div>\r\n            <Header\r\n              element={element}\r\n              title={title}\r\n            />\r\n            <div className=\"menu-slide-outer x199\">\r\n              <div className=\"menu-slide-inner\">\r\n                <div className=\"l-content\">\r\n                  <div className=\"block\">\r\n                    <div className=\"b-db_entry\">\r\n                      <div className=\"c-image\">\r\n                        <div className=\"cc block\">\r\n                          <Poster element={element} />\r\n                          <Subposter />\r\n                        </div>\r\n                        <div className=\"b-user_rate\"></div>\r\n                      </div>\r\n                      <div className=\"c-about\">\r\n                        <div className=\"cc\">\r\n                          <div className=\"c-info-left\">\r\n                            <div className=\"subheadline\">Information</div>\r\n                            <Information\r\n                              element={element}\r\n                              title={title}\r\n                            />\r\n                          </div>\r\n                          <div className=\"c-info-right\">\r\n                            {element.score > 0 ? <Score scoreValue={element.score} /> : \"\"}\r\n                            {(element.publishers !== undefined && element.publishers.length > 0) ||\r\n                            (element.studios !== undefined && element.studios.length > 0) ? (\r\n                              <Production\r\n                                productionName={productionType}\r\n                                title={title}\r\n                                production={prosuctionProperty}\r\n                              />\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <Description descriptionValue={element.description_html} />\r\n                    </div>\r\n                    <div className=\"cc-related-authors\">\r\n                      <Related />\r\n                      <Authors />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <aside className=\"l-menu\">\r\n                  <div className=\"b-animes-menu\">\r\n                    <div className=\"block\">\r\n                      <div className=\"subheadline\">People's ratings</div>\r\n                      <SimpleHorizontalBar\r\n                        element={element}\r\n                        property={\"rates_scores_stats\"}\r\n                        maxValue={maxRatesScore}\r\n                      />\r\n                    </div>\r\n                    <div className=\"block\">\r\n                      <div className=\"subheadline\">On people's lists</div>\r\n                      <SimpleHorizontalBar\r\n                        element={element}\r\n                        property={\"rates_statuses_stats\"}\r\n                        maxValue={maxRatesStatuse}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </aside>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ElementPage;\r\n","import { hostUrl } from \"../../const/urlConsts\";\r\n\r\nconst Preview = ({element, imageType}) => {\r\n  return (\r\n    <picture>\r\n      <source\r\n        srcSet={hostUrl + imageType}\r\n        type=\"image/webp\"\r\n      />\r\n      <img\r\n        alt={element.name}\r\n        src={hostUrl + imageType}\r\n        srcSet={hostUrl + imageType}\r\n      />\r\n    </picture>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","export const timeFromPublication = (date: Date) => {\r\n  const time = Date.now();\r\n  const publicationDate = new Date(date);\r\n  const dateDifference = time - publicationDate.getTime();\r\n\r\n  const second = 1000;\r\n  const minute = 1000 * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const year = day * 365;\r\n\r\n  let seconds = Math.round(dateDifference / second);\r\n  let minutes = Math.round(dateDifference / minute);\r\n  let hours = Math.round(dateDifference / hour);\r\n  let days = Math.round(dateDifference / day);\r\n  let years = Math.round(dateDifference / year);\r\n\r\n  if (dateDifference < 1 * minute) {\r\n    return seconds + \" seconds ago\";\r\n  }\r\n  if (dateDifference > 1 * minute && dateDifference < 1 * hour) {\r\n    return minutes + \" minutes ago\";\r\n  }\r\n  if (dateDifference > 1 * hour && dateDifference < 1 * day) {\r\n    return hours + \" hours ago\";\r\n  }\r\n  if (dateDifference > 1 * day && dateDifference < 1 * year) {\r\n    return days + \" days ago\";\r\n  }\r\n  if (dateDifference > 1 * year) {\r\n    return years + \" years ago\";\r\n  }\r\n};\r\n\r\nexport const getYear = (date: Date) => {\r\n  return new Date(date).getFullYear();\r\n};\r\n"],"names":["_ref","element","property","maxValue","_jsx","className","id","children","map","rate","_jsxs","name","concat","value","style","width","title","scoreValue","Math","round","productionName","production","image","Link","to","src","alt","descriptionValue","dangerouslySetInnerHTML","__html","kind","ongoing","episodes_aired","episodes","duration","volumes","chapters","status","aired_on","genres","genre","Preview","imageType","original","Subposter","relation","url","getYear","Related","pathname","useLocation","elements","setElements","useState","data","isSuccess","api","useGetElementQuery","useEffect","console","log","Suspense","fallback","Spinner","anime","x48","RelatedInformation","manga","Authors","useAppDispatch","dispatch","basicUrl","UrlParts","ANIMES","MANGAS","RANOBE","onClick","kindBreadCrumb","updateFilter","restoreCollectionFilter","ElementPage","maxRatesScore","setMaxRatesScore","maxRatesStatuse","setMaxRatesStatuse","productionType","setProductionType","prosuctionProperty","setProsuctionProperty","RegExp","test","updateTitle","undefined","publishers","length","studios","maxRatesScoreCalc","max","rates_scores_stats","maxRatesStatuseCalc","rates_statuses_stats","Header","Poster","Information","score","Score","Production","Description","description_html","SimpleHorizontalBar","srcSet","hostUrl","type","useDispatch","useAppSelector","useSelector","timeFromPublication","date","dateDifference","Date","now","getTime","minute","hour","day","year","seconds","minutes","hours","days","years","getFullYear"],"sourceRoot":""}
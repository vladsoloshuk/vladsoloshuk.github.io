{"version":3,"file":"static/js/552.f59ca065.chunk.js","mappings":"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","sources":["components/Catalogs/EmptyCatalog/EmptyCatalogItem.js","components/Preview/Preview.js","components/UI/Trigger/Trigger.js","hooks/redux.ts","hooks/useObserver.js","components/Sections/OngoingSection.js","components/Sections/NewsSection.js","components/Sections/ContentSection.js","components/Sections/AnimeUpdatesSection.js","components/Sections/NewsCatalog.js","const/tags.js","components/Sections/UserSection/TagLink.js","components/Sections/UserSection/TagSection.js","components/Sections/UserSection.js","pages/Home.js","utils/dateCalculations.ts","utils/textTransform.ts"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Preview from \"../../Preview/Preview\";\r\nimport { kindTransform, urlTransform } from \"../../../utils/textTransform\";\r\n\r\nconst EmptyCatalogItem = ({ element, imageType }) => {\r\n  return (\r\n    <article className=\"c-column b-catalog_entry c-anime\">\r\n      <Link\r\n        element={element}\r\n        className=\"cover anime-tooltip-processed\"\r\n        to={urlTransform(element.kind, element.url)}\r\n        state={element}\r\n      >\r\n        <span className=\"image-decor\">\r\n          <span className=\"image-cutter\">\r\n            <Preview\r\n              element={element}\r\n              imageType={element.image[imageType]}\r\n            />\r\n          </span>\r\n        </span>\r\n        <span className={`title ${imageType === \"preview\" ? \"left_aligned\" : \"two_lined\"}`}>{element.name}</span>\r\n        {imageType === \"preview\" ? (\r\n          <span className=\"misc\">\r\n            <span>{kindTransform(element.kind)}</span>\r\n            <span>{element.aired_on ? element.aired_on.split(\"-\")[0] : \"\"}</span>\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default EmptyCatalogItem;\r\n","import { hostUrl } from \"../../const/urlConsts\";\r\n\r\nconst Preview = ({ element, imageType }) => {\r\n  // console.log(imageType);\r\n  let url = \"\";\r\n  imageType.includes(\"http\") ? (url = imageType) : (url = hostUrl + imageType);\r\n\r\n  return (\r\n    <picture>\r\n      <source\r\n        srcSet={url}\r\n        type=\"image/webp\"\r\n      />\r\n      <img\r\n        alt={element.name}\r\n        src={url}\r\n        srcSet={url}\r\n      />\r\n    </picture>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","const Trigger = ({ target }) => {\r\n  return (\r\n    <div\r\n      style={{ height: \"3rem\" }}\r\n      ref={target}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Trigger;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { useEffect, useRef } from \"react\";\r\n\r\nconst useObserver = (ref, isLoading, callback) => {\r\n  const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    const observerOptions = {\r\n      threshold: 1\r\n    };\r\n    observer.current = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        callback();\r\n      }\r\n    }, observerOptions);\r\n    observer.current.observe(ref.current);\r\n  }, [ref, isLoading, callback]);\r\n};\r\n\r\nexport default useObserver;\r\n","import { Link } from \"react-router-dom\";\r\nimport { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport EmptyCatalogItem from \"../Catalogs/EmptyCatalog/EmptyCatalogItem\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { updateFilter } from \"../../store/reducers/FilterSlice\";\r\nimport { restoreCollectionFilter } from \"../../store/reducers/PageParams\";\r\n\r\nconst OngoingSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const queryParams = {\r\n    limit: 8,\r\n    status: \"ongoing\",\r\n    order: \"popularity\",\r\n    season: 2024\r\n  };\r\n  const url = UrlParts.ANIMES;\r\n  const { data, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  const param = \"/status/ongoing\";\r\n  const loadFuction = () => {\r\n    dispatch(updateFilter([\"status\", \"ongoing\"]));\r\n    dispatch(restoreCollectionFilter([\"restoreCollectionFilter\", false]));\r\n  };\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"subheadline linkheadline m15\">\r\n          <Link\r\n            to={`${UrlParts.ANIMES}${param}`}\r\n            onClick={loadFuction}\r\n          >\r\n            Now on screens\r\n          </Link>\r\n        </div>\r\n        <div className=\"fc-ongoings\">\r\n          <div className=\"mobile-slider-prev bright\" />\r\n          <div className=\"mobile-slider-next bright\" />\r\n          <div className=\"inner\">\r\n            {isSuccess ? (\r\n              elements.map((element) => (\r\n                <EmptyCatalogItem\r\n                  key={element.id}\r\n                  element={element}\r\n                  imageType=\"preview\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default OngoingSection;\r\n","import { Link } from \"react-router-dom\";\r\nimport { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { timeFromPublication } from \"../../utils/dateCalculations\";\r\n\r\nconst NewsSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const queryParams = {\r\n    forum: \"news\",\r\n    limit: 2\r\n  };\r\n  const url = UrlParts.TOPICS;\r\n  const { data, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"subheadline-buttons\">\r\n          <Link\r\n            className=\"b-link_button dark mini create-topic\"\r\n            to=\"/\"\r\n            title=\"Add news\"\r\n          >\r\n            <span>Add news</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"headline linkheadline orange\">News</div>\r\n        <div className=\"news_wall latest-news\">\r\n          {isSuccess ? (\r\n            elements.map((element) => (\r\n              <article\r\n                key={element.id}\r\n                className=\"b-news_wall-topic\"\r\n              >\r\n                <Link\r\n                  to={`${element.url}`}\r\n                  title={element.topic_title}\r\n                >\r\n                  <div className=\"poster\">\r\n                    <div className=\"b-shiki_swiper\">\r\n                      {}\r\n                      <img\r\n                        className=\"b-image\"\r\n                        src={new DOMParser().parseFromString(element.html_footer, \"text/html\").getElementsByTagName(\"img\")[0].src}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-line\">\r\n                    {element.linked_type ? (\r\n                      <div className=\"tags\">\r\n                        <div\r\n                          className=\"b-anime_status_tag other\"\r\n                          data-text={element.linked_type}\r\n                        ></div>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <time>{timeFromPublication(element.created_at)}</time>\r\n                    <div className=\"comments\">{element.comments_count}</div>\r\n                  </div>\r\n                  <div className=\"title\">{element.topic_title}</div>\r\n                </Link>\r\n              </article>\r\n            ))\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default NewsSection;\r\n","import { Suspense } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nconst ContentSection = () => {\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"fc-2_3\">\r\n          <div className=\"f-column\">\r\n            <div className=\"headline skyblue\">\r\n              Content\r\n              <div className=\"misc-links\">\r\n                <a href=\"https://shikimori.one/collections\">Collections</a>\r\n                <a href=\"https://shikimori.one/forum/critiques\">Critiques</a>\r\n                <a href=\"https://shikimori.one/articles\">Articles</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"content-updates\"></div>\r\n          </div>\r\n          <div className=\"f-column\">\r\n            <div className=\"headline\">Topics of the day</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ContentSection;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport { api } from \"../../services/Api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport Preview from \"../Preview/Preview\";\r\nimport { timeFromPublication } from \"../../utils/dateCalculations\";\r\nimport _ from \"lodash\";\r\nimport { firstLetterUpperCase, kindTransform } from \"../../utils/textTransform\";\r\n\r\nconst AnimeUpdatesSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const queryParams = {\r\n    censored: true,\r\n    limit: 30\r\n  };\r\n\r\n  const url = UrlParts.TOPICS + UrlParts.UPDATES;\r\n  const { data, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      let animeUpdated = [];\r\n      data.forEach((element) => {\r\n        switch (element.linked.kind) {\r\n          case \"tv\":\r\n          case \"movie\":\r\n          case \"ova\":\r\n          case \"ona\":\r\n          case \"special\":\r\n          case \"music\":\r\n            animeUpdated.push(element);\r\n            break;\r\n          default:\r\n        }\r\n      });\r\n      setElements(_.uniqBy(animeUpdated, (element) => element.linked.id).slice(0, 8));\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"headline linkheadline magenta m15\">\r\n          <Link to=\"/\">Anime Updates</Link>\r\n        </div>\r\n        <div className=\"db-updates\">\r\n          <div className=\"mobile-slider-prev bright\" />\r\n          <div className=\"mobile-slider-next bright\" />\r\n          <div className=\"inner\">\r\n            {isSuccess ? (\r\n              elements.map((element) => (\r\n                <Link\r\n                  to={element.linked.url}\r\n                  key={element.id}\r\n                  className=\"db-update unprocessed bubbled-processed\"\r\n                >\r\n                  <div className=\"poster\">\r\n                    <Preview\r\n                      element={element}\r\n                      imageType={element.linked.image.x48}\r\n                    />\r\n                  </div>\r\n                  <div className=\"info\">\r\n                    <div className=\"name\">{element.linked.name}</div>\r\n                    <div className=\"status-time\">\r\n                      <div\r\n                        className={`b-anime_status_tag ${element.linked.status}`}\r\n                        data-text={firstLetterUpperCase(element.linked.status)}\r\n                      ></div>\r\n                      <time>{timeFromPublication(element.created_at)}</time>\r\n                    </div>\r\n                    <div className=\"tags\">\r\n                      <div className=\"b-anime_status_tag studio\">{kindTransform(element.linked.kind)}</div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default AnimeUpdatesSection;\r\n","import { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { useRef, useEffect, useState, Suspense } from \"react\";\r\nimport useObserver from \"../../hooks/useObserver\";\r\nimport Trigger from \"../UI/Trigger/Trigger\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { timeFromPublication } from \"../../utils/dateCalculations\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nconst NewsCatalog = () => {\r\n  const [elements, setElements] = useState([]);\r\n  const [page, setPage] = useState(2);\r\n  const [isObserverLoading, setIsObserverLoading] = useState(false);\r\n\r\n  const queryParams = {\r\n    forum: \"news\",\r\n    limit: 3,\r\n    page: page\r\n  };\r\n\r\n  const url = UrlParts.TOPICS;\r\n  const { data, isFetching, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess && isObserverLoading) {\r\n      const arr = [...data];\r\n      arr.pop();\r\n      setElements([...elements, ...arr]);\r\n    }\r\n    if (isSuccess && !isObserverLoading) {\r\n      const arr = [...data];\r\n      arr.pop();\r\n      setElements([...arr]);\r\n    }\r\n    setIsObserverLoading(false);\r\n  }, [data]);\r\n\r\n  //observer setup\r\n  const lastElement = useRef();\r\n  const observerFunctions = () => {\r\n    setPage(page + 1);\r\n    setIsObserverLoading(true);\r\n  };\r\n  useObserver(lastElement, isFetching, () => observerFunctions());\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"headline skyblue m15\">More news</div>\r\n        <div className=\"news_wall other-news\">\r\n          {isSuccess && elements.length > 0 ? (\r\n            elements.map((element) => (\r\n              <article\r\n                key={element.id}\r\n                className=\"b-news_wall-topic\"\r\n              >\r\n                <Link\r\n                  to={element.url}\r\n                  title={element.topic_title}\r\n                >\r\n                  <div className=\"poster\">\r\n                    <div className=\"b-shiki_swiper\">\r\n                      <img\r\n                        className=\"b-image\"\r\n                        src={new DOMParser().parseFromString(element.html_footer, \"text/html\").getElementsByTagName(\"img\")[0].src}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-line\">\r\n                    {/* <div className=\"tags\">\r\n                      <div\r\n                        className=\"b-anime_status_tag other\"\r\n                        data-text={element.linked.status}\r\n                      ></div>\r\n                      <div\r\n                        className=\"b-anime_status_tag other\"\r\n                        data-text={element.linked.kind}\r\n                      ></div>\r\n                    </div> */}\r\n                    <time>{timeFromPublication(element.created_at)}</time>\r\n                    <div className=\"comments\">{element.comments_count}</div>\r\n                  </div>\r\n                  <div className=\"title\">{element.topic_title}</div>\r\n                </Link>\r\n              </article>\r\n            ))\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </div>\r\n        {isSuccess ? <Trigger target={lastElement}></Trigger> : \"\"}\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default NewsCatalog;\r\n","import { UrlParts } from \"./urlConsts\";\r\n\r\nexport const animeTags = [\r\n  { id: 1, name: \"Spring 2024\", property: \"season\", value: \"spring_2024\", type: \"anime\", link: UrlParts.ANIMES },\r\n  { id: 2, name: \"Winter 2024\", property: \"season\", value: \"winter_2024\", type: \"anime\", link: UrlParts.ANIMES },\r\n  { id: 3, name: \"2024\", property: \"season\", value: \"2024\", type: \"anime\", link: UrlParts.ANIMES },\r\n  { id: 4, name: \"2023\", property: \"season\", value: \"2023\", type: \"anime\", link: UrlParts.ANIMES },\r\n  { id: 5, name: \"Ongoing\", property: \"status\", value: \"ongoing\", type: \"anime\", link: UrlParts.ANIMES },\r\n  { id: 6, name: \"Favorites\", type: \"anime\", link: UrlParts.ANIMES },\r\n  { id: 7, name: \"Recommendations\", type: \"anime\", link: UrlParts.ANIMES }\r\n];\r\n\r\nexport const mangaTags = [\r\n  { id: 1, name: \"Manga\", property: \"kind\", value: \"manga\", type: \"manga\", link: UrlParts.MANGAS },\r\n  { id: 2, name: \"Manhwa\", property: \"kind\", value: \"manhwa\", type: \"manga\", link: UrlParts.MANGAS },\r\n  { id: 3, name: \"Manhua\", property: \"kind\", value: \"manhua\", type: \"manga\", link: UrlParts.MANGAS },\r\n  { id: 4, name: \"One shot\", property: \"kind\", value: \"one_shot\", type: \"manga\", link: UrlParts.MANGAS },\r\n  { id: 5, name: \"Doujin\", property: \"kind\", value: \"doujin\", type: \"manga\", link: UrlParts.MANGAS },\r\n  { id: 6, name: \"Favorites\", type: \"manga\", link: UrlParts.ANIMES },\r\n  { id: 7, name: \"Recommendations\", type: \"manga\", link: UrlParts.ANIMES }\r\n];\r\n\r\nexport const ranobeTags = [{ id: 1, name: \"Favorites\", type: \"ranobe\", link: UrlParts.RANOBE }];\r\n","import { Link } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../../hooks/redux\";\r\nimport { restoreFilter, updateFilter } from \"../../../store/reducers/FilterSlice\";\r\nimport { restoreCollectionFilter } from \"../../../store/reducers/PageParams\";\r\n\r\nconst TagLink = ({ element }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const tagClick = () => {\r\n    dispatch(restoreFilter());\r\n    dispatch(updateFilter([element.property, element.value]));\r\n    dispatch(restoreCollectionFilter([\"restoreCollectionFilter\", false]));\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      className={`tag-link ${element.type}-tag`}\r\n      onClick={tagClick}\r\n      to={element.link}\r\n      title={element.name}\r\n    >\r\n      {element.name}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default TagLink;\r\n","import { Link } from \"react-router-dom\";\r\nimport TagLink from \"./TagLink\";\r\nimport { ranobeTags } from \"../../../const/tags\";\r\n\r\nconst TagSection = ({ title, url, tags, sectionColor }) => {\r\n  return (\r\n    <div className=\"f-sections\">\r\n      <div className=\"fc-headlines\">\r\n        <div className={`f-headline midheadline ${sectionColor} linkheadline`}>\r\n          <Link to={url}>{title}</Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"fc-tags\">\r\n        <div className={`f-tags ${tags[0].type}-tags`}>\r\n          <div className=\"tags\">\r\n            {tags.map((element) => (\r\n              <TagLink\r\n                key={element.id}\r\n                element={element}\r\n              ></TagLink>\r\n            ))}\r\n          </div>\r\n          {tags === ranobeTags ? (\r\n            <div className=\"forum-container\">\r\n              <Link\r\n                className=\"b-link_button dark mini arrow-right\"\r\n                to=\"/forum\"\r\n                title=\"Forum\"\r\n              >\r\n                Forum\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagSection;\r\n","import { Suspense } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { animeTags, mangaTags, ranobeTags } from \"../../const/tags\";\r\nimport TagSection from \"./UserSection/TagSection\";\r\n\r\nconst UserSection = () => {\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"fc-user-sections\">\r\n          <div className=\"f-user\">\r\n            {/* <div className=\"my-list\">\r\n              <div className=\"label\">\r\n                <span>My list</span>\r\n                <div className=\"misc-links\">\r\n                  <Link to=\"/\">Anime</Link>\r\n                  <Link to=\"/\">Manga</Link>\r\n                  <Link to=\"/\">history</Link>\r\n                </div>\r\n              </div>\r\n              <Link\r\n                className=\"b-user_rate-history\"\r\n                to=\"/\"\r\n                title=\"Vinland Saga\"\r\n              >\r\n                <picture>\r\n                  <source\r\n                    srcSet=\"\"\r\n                    type=\"image/webp\"\r\n                  />\r\n                  <img\r\n                    alt=\"Vinland Saga\"\r\n                    src=\"\"\r\n                    srcSet=\"\"\r\n                  />\r\n                </picture>\r\n                <div className=\"content\">\r\n                  <div className=\"title\">\r\n                    <span className=\"name-en\">Vinland Saga</span>\r\n                  </div>\r\n                  <div className=\"progress\"></div>\r\n                  <div className=\"status-counter\">\r\n                    <div className=\"status\">Читаю</div>\r\n                    <div className=\"counter\"></div>\r\n                  </div>\r\n                  <div className=\"score-time\">\r\n                    <time dateTime=\"2023-11-10T11:24:18+03:00\">7 дней назад</time>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div> */}\r\n            <div className=\"social\">\r\n              <p className=\"m5\">Login via social media networks</p>\r\n              <div>\r\n                <Link\r\n                  className=\"b-oauth_token b-tooltipped vkontakte\"\r\n                  data-direction=\"top\"\r\n                  data-method=\"post\"\r\n                  data-turbolinks=\"false\"\r\n                  to=\"\"\r\n                  original-title=\"Login via Вконтакте\"\r\n                ></Link>\r\n                <Link\r\n                  className=\"b-oauth_token b-tooltipped twitter\"\r\n                  data-direction=\"top\"\r\n                  to=\"\"\r\n                  original-title=\"Login via Twitter\"\r\n                ></Link>\r\n                <Link\r\n                  className=\"b-oauth_token b-tooltipped facebook\"\r\n                  data-direction=\"top\"\r\n                  to=\"\"\r\n                  original-title=\"Login via Facebook\"\r\n                ></Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"sign-in\">\r\n              <Link\r\n                className=\"b-link_button dark\"\r\n                to=\"\"\r\n              >\r\n                Login with password\r\n              </Link>\r\n            </div>\r\n            <div className=\"links\">\r\n              <Link to=\"\">Registration</Link>\r\n              <Link to=\"\">Password recovery</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"f-tag-sections\">\r\n            <TagSection\r\n              title={\"Anime\"}\r\n              url={UrlParts.ANIMES}\r\n              tags={animeTags}\r\n              sectionColor={\"green\"}\r\n            />\r\n            <TagSection\r\n              title={\"Manga\"}\r\n              url={UrlParts.MANGAS}\r\n              tags={mangaTags}\r\n              sectionColor={\"magenta\"}\r\n            />\r\n            <TagSection\r\n              title={\"Ranobe\"}\r\n              url={UrlParts.RANOBE}\r\n              tags={ranobeTags}\r\n              sectionColor={\"blue\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default UserSection;\r\n","import { useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../hooks/redux\";\r\nimport { updateTitle } from \"../store/reducers/PageParams\";\r\nimport OngoingSection from \"../components/Sections/OngoingSection\";\r\nimport NewsSection from \"../components/Sections/NewsSection\";\r\nimport ContentSection from \"../components/Sections/ContentSection\";\r\nimport AnimeUpdatesSection from \"../components/Sections/AnimeUpdatesSection\";\r\nimport NewsCatalog from \"../components/Sections/NewsCatalog\";\r\nimport { elementVisibility } from \"../store/reducers/MenuParams\";\r\nimport UserSection from \"../components/Sections/UserSection\";\r\n\r\nconst Home = (props) => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(updateTitle(\"Home\"));\r\n    dispatch(elementVisibility([\"search\", false]));\r\n  });\r\n  return (\r\n    <section className=\"p-dashboards p-dashboards-show x1200 l-page\">\r\n      <OngoingSection />\r\n      <UserSection />\r\n      <NewsSection />\r\n      <ContentSection />\r\n      <AnimeUpdatesSection />\r\n      <NewsCatalog />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const timeFromPublication = (date: Date) => {\r\n  const time = Date.now();\r\n  const publicationDate = new Date(date);\r\n  const dateDifference = time - publicationDate.getTime();\r\n\r\n  const second = 1000;\r\n  const minute = 1000 * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const year = day * 365;\r\n\r\n  let seconds = Math.round(dateDifference / second);\r\n  let minutes = Math.round(dateDifference / minute);\r\n  let hours = Math.round(dateDifference / hour);\r\n  let days = Math.round(dateDifference / day);\r\n  let years = Math.round(dateDifference / year);\r\n\r\n  if (dateDifference < 1 * minute) {\r\n    return seconds + \" seconds ago\";\r\n  }\r\n  if (dateDifference > 1 * minute && dateDifference < 1 * hour) {\r\n    return minutes + \" minutes ago\";\r\n  }\r\n  if (dateDifference > 1 * hour && dateDifference < 1 * day) {\r\n    return hours + \" hours ago\";\r\n  }\r\n  if (dateDifference > 1 * day && dateDifference < 1 * year) {\r\n    return days + \" days ago\";\r\n  }\r\n  if (dateDifference > 1 * year) {\r\n    return years + \" years ago\";\r\n  }\r\n};\r\n\r\nexport const getYear = (date: Date) => {\r\n  return new Date(date).getFullYear();\r\n};\r\n\r\nexport const getYearGap = (airDate: string, releaseDate: string) => {\r\n  return releaseDate ? (`${airDate.substring(0, 4)} - ${releaseDate.substring(0, 4)}`) : (`${airDate.substring(0, 4)}`);\r\n};\r\n\r\nexport const transformDate = (inputDate: Date) => {\r\n  let date = new Date(inputDate);\r\n  let year = date.getFullYear();\r\n  let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n  let day = (\"0\" + date.getDate()).slice(-2);\r\n  let hours = (\"0\" + date.getHours()).slice(-2);\r\n  let minutes = (\"0\" + date.getMinutes()).slice(-2);\r\n  return `${year}-${month}-${day} - ${hours}:${minutes}`;\r\n};\r\n","export const kindTransform = (kind: string) => {\r\n  let outputKind: string = \"\";\r\n  switch (kind) {\r\n    case \"tv\":\r\n      outputKind = \"TV series\";\r\n      break;\r\n    default:\r\n      outputKind = kind.replace(/_/g, \" \").replace(kind[0], kind[0].toUpperCase());\r\n  }\r\n  return outputKind;\r\n};\r\n\r\nexport const urlTransform = (kind: string, url: string) => {\r\n  let transformedUrl: string = \"\";\r\n  kind === \"light_novel\" || kind === \"novel\" ? (transformedUrl = url.replace(/mangas/g, \"ranobe\")) : (transformedUrl = url);\r\n  return transformedUrl;\r\n};\r\n\r\nexport const firstLetterUpperCase = (InputStr: string) => {\r\n  return InputStr.replace(InputStr[0], InputStr[0].toUpperCase());\r\n};\r\n"],"names":["_ref","element","imageType","_jsx","className","children","_jsxs","Link","to","urlTransform","kind","url","state","Preview","image","concat","name","kindTransform","aired_on","split","includes","hostUrl","srcSet","type","alt","src","target","style","height","ref","useAppDispatch","useDispatch","useAppSelector","useSelector","useObserver","isLoading","callback","observer","useRef","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","threshold","observe","OngoingSection","elements","setElements","useState","dispatch","UrlParts","ANIMES","data","isSuccess","api","useGetElementsQuery","queryParams","limit","status","order","season","Suspense","fallback","Spinner","onClick","loadFuction","updateFilter","restoreCollectionFilter","map","EmptyCatalogItem","id","NewsSection","TOPICS","forum","title","topic_title","DOMParser","parseFromString","html_footer","getElementsByTagName","linked_type","timeFromPublication","created_at","comments_count","ContentSection","href","AnimeUpdatesSection","UPDATES","censored","animeUpdated","forEach","linked","push","_","slice","x48","firstLetterUpperCase","NewsCatalog","page","setPage","isObserverLoading","setIsObserverLoading","isFetching","arr","pop","lastElement","length","Trigger","animeTags","property","value","link","mangaTags","MANGAS","ranobeTags","RANOBE","tagClick","restoreFilter","tags","sectionColor","TagLink","UserSection","TagSection","props","updateTitle","elementVisibility","date","dateDifference","Date","now","getTime","minute","hour","day","year","seconds","Math","round","minutes","hours","days","years","getYear","getFullYear","getYearGap","airDate","releaseDate","substring","transformDate","inputDate","month","getMonth","getDate","getHours","getMinutes","outputKind","replace","toUpperCase","transformedUrl","InputStr"],"sourceRoot":""}
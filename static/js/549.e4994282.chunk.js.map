{"version":3,"file":"static/js/549.e4994282.chunk.js","mappings":"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","sources":["components/Catalogs/EmptyCatalog/EmptyCatalogItem.js","components/Preview/Preview.js","components/UI/Trigger/Trigger.js","hooks/redux.ts","hooks/useObserver.js","components/Sections/OngoingSection.js","components/Sections/NewsSection.js","components/Sections/ContentSection.js","components/Sections/AnimeUpdatesSection.js","components/Sections/NewsCatalog.js","pages/Home.js","utils/dateCalculations.ts"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Preview from \"../../Preview/Preview\";\r\n\r\nconst EmptyCatalogItem = ({ element }) => {\r\n  return (\r\n    <article className=\"c-column b-catalog_entry c-anime\">\r\n      <Link\r\n        element={element}\r\n        className=\"cover anime-tooltip-processed\"\r\n        to={`${element.url}`}\r\n        state={element}\r\n      >\r\n        <span className=\"image-decor\">\r\n          <span className=\"image-cutter\">\r\n            <Preview element={element} imageType={element.image.preview}/>\r\n          </span>\r\n        </span>\r\n        <span className=\"title left_aligned\">{element.name}</span>\r\n        <span className=\"misc\">\r\n          <span>{element.kind}</span>\r\n          <span>{element.aired_on ? element.aired_on.split(\"-\")[0] : \"\"}</span>\r\n        </span>\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default EmptyCatalogItem;\r\n","import { hostUrl } from \"../../const/urlConsts\";\r\n\r\nconst Preview = ({element, imageType}) => {\r\n  return (\r\n    <picture>\r\n      <source\r\n        srcSet={hostUrl + imageType}\r\n        type=\"image/webp\"\r\n      />\r\n      <img\r\n        alt={element.name}\r\n        src={hostUrl + imageType}\r\n        srcSet={hostUrl + imageType}\r\n      />\r\n    </picture>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","const Trigger = ({ target }) => {\r\n  return (\r\n    <div\r\n      style={{ height: \"3rem\" }}\r\n      ref={target}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Trigger;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { useEffect, useRef } from \"react\";\r\n\r\nconst useObserver = (ref, isLoading, callback) => {\r\n  const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    const observerOptions = {\r\n      threshold: 1\r\n    };\r\n    observer.current = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        callback();\r\n      }\r\n    }, observerOptions);\r\n    observer.current.observe(ref.current);\r\n  }, [ref, isLoading, callback]);\r\n};\r\n\r\nexport default useObserver;\r\n","import { Link } from \"react-router-dom\";\r\nimport { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport EmptyCatalogItem from \"../Catalogs/EmptyCatalog/EmptyCatalogItem\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { updateFilter } from \"../../store/reducers/FilterSlice\";\r\nimport { restoreCollectionFilter } from \"../../store/reducers/PageParams\";\r\n\r\nconst OngoingSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const queryParams = {\r\n    limit: 8,\r\n    status: \"ongoing\",\r\n    order: \"popularity\",\r\n    season: 2023\r\n  };\r\n  const url = UrlParts.ANIMES;\r\n  const { data, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  const param = \"/status/ongoing\";\r\n  const loadFuction = () => {\r\n    dispatch(updateFilter([\"status\", \"ongoing\"]));\r\n    dispatch(restoreCollectionFilter([\"restoreCollectionFilter\", false]));\r\n  };\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"subheadline linkheadline m15\">\r\n          <Link\r\n            to={`${UrlParts.ANIMES}${param}`}\r\n            onClick={loadFuction}\r\n          >\r\n            Now on screens\r\n          </Link>\r\n        </div>\r\n        <div className=\"fc-ongoings\">\r\n          <div className=\"mobile-slider-prev bright\" />\r\n          <div className=\"mobile-slider-next bright\" />\r\n          <div className=\"inner\">\r\n            {isSuccess ? (\r\n              elements.map((element) => (\r\n                <EmptyCatalogItem\r\n                  key={element.id}\r\n                  element={element}\r\n                />\r\n              ))\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default OngoingSection;\r\n","import { Link } from \"react-router-dom\";\r\nimport { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { timeFromPublication } from \"../../utils/dateCalculations\";\r\n\r\nconst NewsSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const queryParams = {\r\n    forum: \"news\",\r\n    limit: 2\r\n  };\r\n  const url = UrlParts.TOPICS;\r\n  const { data, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setElements(data);\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"subheadline-buttons\">\r\n          <Link\r\n            className=\"b-link_button dark mini create-topic\"\r\n            href=\"/\"\r\n            title=\"Написать новость\"\r\n          >\r\n            <span>Add news</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"headline linkheadline orange\">News</div>\r\n        <div className=\"news_wall latest-news\">\r\n          {isSuccess ? (\r\n            elements.map((element) => (\r\n              <article\r\n                key={element.id}\r\n                className=\"b-news_wall-topic\"\r\n              >\r\n                <Link\r\n                  to={`${element.url}`}\r\n                  title={element.topic_title}\r\n                >\r\n                  <div className=\"poster\">\r\n                    <div className=\"b-shiki_swiper\">\r\n                      {}\r\n                      <img\r\n                        className=\"b-image\"\r\n                        src={new DOMParser().parseFromString(element.html_footer, \"text/html\").getElementsByTagName(\"img\")[0].src}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-line\">\r\n                    {element.linked ? (\r\n                      <div className=\"tags\">\r\n                        <div\r\n                          className=\"b-anime_status_tag other\"\r\n                          data-text={element.linked.status}\r\n                        ></div>\r\n                        <div\r\n                          className=\"b-anime_status_tag other\"\r\n                          data-text={element.linked.kind}\r\n                        ></div>\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                    <time>{timeFromPublication(element.created_at)}</time>\r\n                    <div className=\"comments\">{element.comments_count}</div>\r\n                  </div>\r\n                  <div className=\"title\">{element.topic_title}</div>\r\n                </Link>\r\n              </article>\r\n            ))\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default NewsSection;\r\n","import { Suspense } from \"react\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nconst ContentSection = () => {\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"fc-2_3\">\r\n          <div className=\"f-column\">\r\n            <div className=\"headline skyblue\">\r\n              Content\r\n              <div className=\"misc-links\">\r\n                <a href=\"https://shikimori.one/collections\">Collections</a>\r\n                <a href=\"https://shikimori.one/forum/critiques\">Critiques</a>\r\n                <a href=\"https://shikimori.one/articles\">Articles</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"content-updates\"></div>\r\n          </div>\r\n          <div className=\"f-column\">\r\n            <div className=\"headline\">Topics of the day</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ContentSection;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport { api } from \"../../services/Api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport Preview from \"../Preview/Preview\";\r\nimport { timeFromPublication } from \"../../utils/dateCalculations\";\r\nimport _ from \"lodash\";\r\n\r\nconst AnimeUpdatesSection = () => {\r\n  const [elements, setElements] = useState([]);\r\n\r\n  const queryParams = {\r\n    limit: 30\r\n  };\r\n\r\n  const url = UrlParts.TOPICS + UrlParts.UPDATES;\r\n  const { data, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      let animeUpdated = [];\r\n      data.forEach((element) => {\r\n        switch (element.linked.kind) {\r\n          case \"tv\":\r\n          case \"movie\":\r\n          case \"ova\":\r\n          case \"ona\":\r\n          case \"special\":\r\n          case \"music\":\r\n            animeUpdated.push(element);\r\n            break;\r\n          default:\r\n        }\r\n      });\r\n      setElements(_.uniqBy(animeUpdated, (element) => element.linked.id).slice(0, 8));\r\n    }\r\n  }, [data, isSuccess]);\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"headline linkheadline magenta m15\">\r\n          <Link to=\"/\">Anime Updates</Link>\r\n        </div>\r\n        <div className=\"db-updates\">\r\n          <div className=\"mobile-slider-prev bright\" />\r\n          <div className=\"mobile-slider-next bright\" />\r\n          <div className=\"inner\">\r\n            {isSuccess ? (\r\n              elements.map((element) => (\r\n                <Link\r\n                  to={element.linked.url}\r\n                  key={element.id}\r\n                  className=\"db-update unprocessed bubbled-processed\"\r\n                >\r\n                  <div className=\"poster\">\r\n                    <Preview\r\n                      element={element}\r\n                      imageType={element.linked.image.x48}\r\n                    />\r\n                  </div>\r\n                  <div className=\"info\">\r\n                    <div className=\"name\">{element.linked.name}</div>\r\n                    <div className=\"status-time\">\r\n                      <div\r\n                        className={`b-anime_status_tag ${element.linked.status}`}\r\n                        data-text={element.linked.status}\r\n                      ></div>\r\n                      <time>{timeFromPublication(element.created_at)}</time>\r\n                    </div>\r\n                    <div className=\"tags\">\r\n                      <div className=\"b-anime_status_tag studio\">{element.linked.kind}</div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default AnimeUpdatesSection;\r\n","import { api } from \"../../services/Api\";\r\nimport { UrlParts } from \"../../const/urlConsts\";\r\nimport { useRef, useEffect, useState, Suspense } from \"react\";\r\nimport useObserver from \"../../hooks/useObserver\";\r\nimport Trigger from \"../UI/Trigger/Trigger\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { timeFromPublication } from \"../../utils/dateCalculations\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nconst NewsCatalog = () => {\r\n  const [elements, setElements] = useState([]);\r\n  const [page, setPage] = useState(2);\r\n  const [isObserverLoading, setIsObserverLoading] = useState(false);\r\n\r\n  const queryParams = {\r\n    forum: \"news\",\r\n    limit: 3,\r\n    page: page\r\n  };\r\n\r\n  const url = UrlParts.TOPICS;\r\n  const { data, isFetching, isSuccess } = api.useGetElementsQuery({ url, queryParams });\r\n\r\n  //rerendering if data has been changed\r\n  useEffect(() => {\r\n    if (isSuccess && isObserverLoading) {\r\n      const arr = [...data];\r\n      arr.pop();\r\n      setElements([...elements, ...arr]);\r\n    }\r\n    if (isSuccess && !isObserverLoading) {\r\n      const arr = [...data];\r\n      arr.pop();\r\n      setElements([...arr]);\r\n    }\r\n    setIsObserverLoading(false);\r\n  }, [data]);\r\n\r\n  //observer setup\r\n  const lastElement = useRef();\r\n  const observerFunctions = () => {\r\n    setPage(page + 1);\r\n    setIsObserverLoading(true);\r\n  };\r\n  useObserver(lastElement, isFetching, () => observerFunctions());\r\n\r\n  return (\r\n    <Suspense fallback={Spinner}>\r\n      <div className=\"block2\">\r\n        <div className=\"headline skyblue m15\">More news</div>\r\n        <div className=\"news_wall other-news\">\r\n          {isSuccess && elements.length > 0 ? (\r\n            elements.map((element) => (\r\n              <article\r\n                key={element.id}\r\n                className=\"b-news_wall-topic\"\r\n              >\r\n                <Link\r\n                  to={element.url}\r\n                  title={element.topic_title}\r\n                >\r\n                  <div className=\"poster\">\r\n                    <div className=\"b-shiki_swiper\">\r\n                      <img\r\n                        className=\"b-image\"\r\n                        src={new DOMParser().parseFromString(element.html_footer, \"text/html\").getElementsByTagName(\"img\")[0].src}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-line\">\r\n                    {/* <div className=\"tags\">\r\n                      <div\r\n                        className=\"b-anime_status_tag other\"\r\n                        data-text={element.linked.status}\r\n                      ></div>\r\n                      <div\r\n                        className=\"b-anime_status_tag other\"\r\n                        data-text={element.linked.kind}\r\n                      ></div>\r\n                    </div> */}\r\n                    <time>{timeFromPublication(element.created_at)}</time>\r\n                    <div className=\"comments\">{element.comments_count}</div>\r\n                  </div>\r\n                  <div className=\"title\">{element.topic_title}</div>\r\n                </Link>\r\n              </article>\r\n            ))\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </div>\r\n        {isSuccess ? <Trigger target={lastElement}></Trigger> : \"\"}\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default NewsCatalog;\r\n","import { useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../hooks/redux\";\r\nimport { updateTitle } from \"../store/reducers/PageParams\";\r\nimport OngoingSection from \"../components/Sections/OngoingSection\";\r\nimport NewsSection from \"../components/Sections/NewsSection\";\r\nimport ContentSection from \"../components/Sections/ContentSection\";\r\nimport AnimeUpdatesSection from \"../components/Sections/AnimeUpdatesSection\";\r\nimport NewsCatalog from \"../components/Sections/NewsCatalog\";\r\nimport { elementVisibility } from \"../store/reducers/MenuParams\";\r\n\r\nconst Home = (props) => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(updateTitle(\"Home\"));\r\n    dispatch(elementVisibility([\"search\", false]));\r\n  });\r\n  return (\r\n    <section className=\"p-dashboards p-dashboards-show x1200 l-page\">\r\n      <OngoingSection />\r\n      <NewsSection />\r\n      <ContentSection />\r\n      <AnimeUpdatesSection />\r\n      <NewsCatalog />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const timeFromPublication = (date: Date) => {\r\n  const time = Date.now();\r\n  const publicationDate = new Date(date);\r\n  const dateDifference = time - publicationDate.getTime();\r\n\r\n  const second = 1000;\r\n  const minute = 1000 * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const year = day * 365;\r\n\r\n  let seconds = Math.round(dateDifference / second);\r\n  let minutes = Math.round(dateDifference / minute);\r\n  let hours = Math.round(dateDifference / hour);\r\n  let days = Math.round(dateDifference / day);\r\n  let years = Math.round(dateDifference / year);\r\n\r\n  if (dateDifference < 1 * minute) {\r\n    return seconds + \" seconds ago\";\r\n  }\r\n  if (dateDifference > 1 * minute && dateDifference < 1 * hour) {\r\n    return minutes + \" minutes ago\";\r\n  }\r\n  if (dateDifference > 1 * hour && dateDifference < 1 * day) {\r\n    return hours + \" hours ago\";\r\n  }\r\n  if (dateDifference > 1 * day && dateDifference < 1 * year) {\r\n    return days + \" days ago\";\r\n  }\r\n  if (dateDifference > 1 * year) {\r\n    return years + \" years ago\";\r\n  }\r\n};\r\n\r\nexport const getYear = (date: Date) => {\r\n  return new Date(date).getFullYear();\r\n};\r\n"],"names":["_ref","element","_jsx","className","children","_jsxs","Link","to","concat","url","state","Preview","imageType","image","preview","name","kind","aired_on","split","srcSet","hostUrl","type","alt","src","target","style","height","ref","useAppDispatch","useDispatch","useAppSelector","useSelector","useObserver","isLoading","callback","observer","useRef","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","threshold","observe","OngoingSection","elements","setElements","useState","dispatch","UrlParts","ANIMES","data","isSuccess","api","useGetElementsQuery","queryParams","limit","status","order","season","Suspense","fallback","Spinner","onClick","loadFuction","updateFilter","restoreCollectionFilter","map","EmptyCatalogItem","id","NewsSection","TOPICS","forum","href","title","topic_title","DOMParser","parseFromString","html_footer","getElementsByTagName","linked","timeFromPublication","created_at","comments_count","ContentSection","AnimeUpdatesSection","UPDATES","animeUpdated","forEach","push","_","slice","x48","NewsCatalog","page","setPage","isObserverLoading","setIsObserverLoading","isFetching","arr","pop","lastElement","length","Trigger","props","updateTitle","elementVisibility","date","dateDifference","Date","now","getTime","minute","hour","day","year","seconds","Math","round","minutes","hours","days","years","getYear","getFullYear"],"sourceRoot":""}